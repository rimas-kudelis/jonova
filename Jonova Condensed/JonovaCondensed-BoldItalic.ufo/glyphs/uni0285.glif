<?xml version='1.0' encoding='UTF-8'?>
<glyph name="uni0285" format="2">
  <advance width="552"/>
  <unicode hex="0285"/>
  <outline>
    <contour>
      <point x="263" y="1464" type="line"/>
      <point x="332" y="1464"/>
      <point x="434" y="1439"/>
      <point x="500" y="1377"/>
      <point x="532" y="1275"/>
      <point x="532" y="1199" type="qcurve"/>
      <point x="532" y="1135"/>
      <point x="521" y="1050" type="qcurve"/>
      <point x="417" y="269" type="line"/>
      <point x="413" y="237"/>
      <point x="408" y="187"/>
      <point x="408" y="167" type="qcurve"/>
      <point x="408" y="116"/>
      <point x="447" y="82"/>
      <point x="494" y="82" type="qcurve"/>
      <point x="479" y="-30" type="line"/>
      <point x="409" y="-30"/>
      <point x="307" y="-5"/>
      <point x="241" y="56"/>
      <point x="209" y="158"/>
      <point x="209" y="234" type="qcurve"/>
      <point x="209" y="298"/>
      <point x="221" y="384" type="qcurve"/>
      <point x="324" y="1165" type="line"/>
      <point x="328" y="1197"/>
      <point x="333" y="1247"/>
      <point x="333" y="1267" type="qcurve"/>
      <point x="333" y="1318"/>
      <point x="294" y="1352"/>
      <point x="248" y="1352" type="qcurve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
11 8 20 4
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 9 values pushed */
6 11 22 11 38 11 54 11 4
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
69 11 85 11 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
26 20 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
26
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
74 26 90 26 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 9 values pushed */
9 26 25 26 41 26 57 26 4
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
5 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
26
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>b14d2b93e7ec1561222271bd22056c9cf913f840a41f1456134d39ec9fa3158b0fe8136a8f25537fbcd4d98c15245485102e4784da2ffb543a27956c6591e9f1</string>
      </dict>
    </dict>
  </lib>
</glyph>
