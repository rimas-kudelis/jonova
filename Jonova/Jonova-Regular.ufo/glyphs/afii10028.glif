<?xml version="1.0" encoding="UTF-8"?>
<glyph name="afii10028" format="2">
  <advance width="1344"/>
  <unicode hex="041A"/>
  <guideline x="0" y="-1123" angle="45"/>
  <guideline x="0" y="-21" angle="0"/>
  <guideline x="-465" y="0" angle="45"/>
  <guideline x="-292" y="0" angle="45"/>
  <guideline x="1015" y="0" angle="130"/>
  <guideline x="1250" y="0" angle="130"/>
  <outline>
    <contour>
      <point x="364" y="1464" type="line" name="sh01"/>
      <point x="364" y="839" type="line" name="iv01"/>
      <point x="374" y="839" type="line"/>
      <point x="1000" y="1464" type="line" name="at01"/>
      <point x="1142" y="1434" type="line" name="at02"/>
      <point x="547" y="839" type="line" name="sv01"/>
      <point x="1250" y="0" type="line" name="ab02"/>
      <point x="1040" y="-30" type="line" name="ab01"/>
      <point x="375" y="762" type="line"/>
      <point x="364" y="762" type="line"/>
      <point x="364" y="0" type="line" name="dh02"/>
      <point x="182" y="0" type="line" name="dh01"/>
      <point x="182" y="1434" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 21 -21</string>
              <string>hstem 1464 -20</string>
              <string>vstem 182 182</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="sh01"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh02" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="sh01" point2="dh02"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sv01"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
10 7 11 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 0 10
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1344l364+1464l364+839l374+839l1000+1464l1142+1434l547+839l1250+0l1040-30l375+762l364+762l364+0l182+0l182+1434|</string>
      </dict>
    </dict>
  </lib>
</glyph>
