<?xml version="1.0" encoding="UTF-8"?>
<glyph name=".notdef" format="2">
  <advance width="1024"/>
  <outline>
    <contour>
      <point x="224" y="122" type="line" name="sv01"/>
      <point x="800" y="122" type="line" name="sh02"/>
      <point x="800" y="1312" type="line" name="sv02"/>
      <point x="224" y="1312" type="line" name="sh04"/>
    </contour>
    <contour>
      <point x="102" y="1434" type="line" name="sh03"/>
      <point x="922" y="1434" type="line"/>
      <point x="922" y="0" type="line" name="sh01"/>
      <point x="102" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sv01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 122</string>
              <string>hstem 1312 122</string>
              <string>vstem 102 122</string>
              <string>vstem 800 122</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh03" round="true" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="sh03" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sv01" stem="Y: 122"/&gt;
    &lt;ttc code="singlev" point1="sh03" point2="sv02" stem="Y: 122"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
1 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1024l224+122l800+122l800+1312l224+1312|l102+1434l922+1434l922+0l102+0|</string>
      </dict>
    </dict>
  </lib>
</glyph>
