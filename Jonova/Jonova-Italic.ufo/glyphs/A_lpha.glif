<?xml version="1.0" encoding="UTF-8"?>
<glyph name="Alpha" format="2">
  <advance width="1344"/>
  <unicode hex="0391"/>
  <outline>
    <contour>
      <point x="1058" y="-30" type="line" name="dh03"/>
      <point x="974" y="365" type="line" name="iv01"/>
      <point x="403" y="365" type="line"/>
      <point x="173" y="-30" type="line" name="dh01"/>
      <point x="59" y="0" type="line" name="dh02"/>
      <point x="908" y="1464" type="line" name="at01"/>
      <point x="952" y="1464" type="line"/>
      <point x="1264" y="0" type="line" name="dh04"/>
    </contour>
    <contour>
      <point x="814" y="1090" type="line"/>
      <point x="473" y="487" type="line" name="sh01"/>
      <point x="949" y="487" type="line" name="sh02"/>
      <point x="824" y="1090" type="line" name="iv02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh03</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 365 122</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 122"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="dh01" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="dh03" point2="sh02"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="dh03" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh01" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="at01" point2="dh03"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sh02" stem="Y: 122"/&gt;
    &lt;ttc code="interpolatev" point="iv02" point1="at01" point2="dh03"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
4 6 3 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
7 8 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 5 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
11 5 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1344l1058-30l974+365l403+365l173-30l59+0l908+1464l952+1464l1264+0|l814+1090l473+487l949+487l824+1090|</string>
      </dict>
    </dict>
  </lib>
</glyph>
