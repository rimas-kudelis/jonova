<?xml version="1.0" encoding="UTF-8"?>
<glyph name="notequal" format="2">
  <advance width="1152"/>
  <unicode hex="2260"/>
  <guideline x="0" y="1456" angle="330"/>
  <guideline x="0" y="183" angle="330"/>
  <guideline x="387" y="0" angle="60"/>
  <guideline x="79" y="0" angle="90"/>
  <guideline x="945" y="0" angle="90"/>
  <guideline x="512" y="0" angle="90"/>
  <outline>
    <contour>
      <point x="240" y="50" type="line" name="hr00"/>
      <point x="329" y="169" type="line"/>
      <point x="104" y="169" type="line"/>
      <point x="142" y="381" type="line"/>
      <point x="490" y="381" type="line"/>
      <point x="649" y="593" type="line"/>
      <point x="179" y="593" type="line"/>
      <point x="216" y="805" type="line"/>
      <point x="808" y="805" type="line"/>
      <point x="959" y="1004" type="line"/>
      <point x="1082" y="924" type="line"/>
      <point x="992" y="805" type="line"/>
      <point x="1218" y="805" type="line"/>
      <point x="1181" y="593" type="line"/>
      <point x="833" y="593" type="line"/>
      <point x="674" y="381" type="line"/>
      <point x="1144" y="381" type="line"/>
      <point x="1106" y="169" type="line"/>
      <point x="513" y="169" type="line"/>
      <point x="364" y="-30" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 169 212</string>
              <string>hstem 593 212</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  19
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  19 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 4 18 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
8 4 14 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>bcafbc08c4bc0039de318c5ed478d2355aa4bcf0450d9df98a4b8b7fb6cc4b5a0709a3f273afe6fb68b201c45395da0a9a69edad8595736c69b95faf2719b850</string>
      </dict>
    </dict>
  </lib>
</glyph>
