<?xml version="1.0" encoding="UTF-8"?>
<glyph name="Hbar" format="2">
  <advance width="1504"/>
  <unicode hex="0126"/>
  <guideline x="32" y="0" angle="90"/>
  <guideline x="-156" y="0" angle="80"/>
  <guideline x="1472" y="0" angle="80"/>
  <outline>
    <contour>
      <point x="384" y="1434" type="line" name="sh02"/>
      <point x="702" y="1464" type="line" name="sh03"/>
      <point x="646" y="1146" type="line" name="sv01"/>
      <point x="1262" y="1146" type="line"/>
      <point x="1312" y="1434" type="line" name="sh04"/>
      <point x="1630" y="1464" type="line" name="sh05"/>
      <point x="1574" y="1146" type="line"/>
      <point x="1674" y="1146" type="line" name="ah03"/>
      <point x="1649" y="1004" type="line" name="dv01"/>
      <point x="1549" y="1004" type="line"/>
      <point x="1372" y="0" type="line" name="sh06"/>
      <point x="1060" y="0" type="line" name="ah01"/>
      <point x="1161" y="575" type="line" name="dv02"/>
      <point x="545" y="575" type="line"/>
      <point x="444" y="0" type="line" name="sh07"/>
      <point x="132" y="0" type="line" name="sh01"/>
      <point x="309" y="1004" type="line" name="sv02"/>
      <point x="209" y="1004" type="line" name="ah02"/>
      <point x="234" y="1146" type="line" name="sv03"/>
      <point x="334" y="1146" type="line"/>
    </contour>
    <contour>
      <point x="1186" y="717" type="line" name="dv03"/>
      <point x="1237" y="1004" type="line" name="sh08"/>
      <point x="621" y="1004" type="line" name="sh09"/>
      <point x="570" y="717" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh02</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 575 142</string>
              <string>hstem 1004 142</string>
              <string>hstem 1464 -20</string>
              <string>vstem 132 312</string>
              <string>vstem 1060 312</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="alignh" point="ah03" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh04"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh05" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh06" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh07" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh08"/&gt;
    &lt;ttc code="singleh" point1="sh07" point2="sh09"/&gt;
    &lt;ttc code="singleh" point1="sh06" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignt" point="sh03" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh05" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh06" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh07" zone="b: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="ah03" stem="T1 H: 142"/&gt;
    &lt;ttc code="doublev" point1="dv02" point2="dv03" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="ah03" point2="sv01"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="ah03" point2="sv03"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sh08"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
24
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
1 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
14 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
7 1 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
20 1 12 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>bd57ef2c2aa7c614544346c4eb937b68f5ff35b31421b5794cf8d99fe7e1521de73b0494a21073c76d1018b8877fd9a83ee99905f367104e9cce15818f9718d5</string>
      </dict>
    </dict>
  </lib>
</glyph>
