<?xml version="1.0" encoding="UTF-8"?>
<glyph name="k" format="2">
  <advance width="1024"/>
  <unicode hex="006B"/>
  <guideline x="0" y="13" angle="45"/>
  <guideline x="0" y="189" angle="45"/>
  <guideline x="0" y="617" angle="0"/>
  <guideline x="1024" y="0" angle="122"/>
  <guideline x="715" y="0" angle="122"/>
  <guideline x="1691" y="0" angle="90"/>
  <anchor x="815" y="1600" name="AccentAbove"/>
  <anchor x="882" y="1400" name="AccentAboveRight"/>
  <anchor x="560" y="0" name="AccentBelow"/>
  <anchor x="532" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="1024" y="0" type="line" name="dh03"/>
      <point x="728" y="-30" type="line" name="dh04"/>
      <point x="515" y="449" type="line" name="sv01"/>
      <point x="451" y="396" type="line"/>
      <point x="382" y="0" type="line" name="dh02"/>
      <point x="100" y="0" type="line" name="dh01"/>
      <point x="358" y="1464" type="line" name="at01"/>
      <point x="585" y="1494" type="line" name="av01"/>
      <point x="645" y="1494" type="line"/>
      <point x="482" y="571" type="line" name="iv01"/>
      <point x="992" y="1004" type="line" name="ih01"/>
      <point x="1132" y="973" type="line"/>
      <point x="738" y="638" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh03</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 21 -21</string>
              <string>hstem 1494 -20</string>
              <string>vstem 100 282</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 282"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 282"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="dh04" point2="dh03"/&gt;
    &lt;ttc code="alignv" point="av01" align="right"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="ih01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="dh04" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh02" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="dh04" point2="av01"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sv01" stem="T1 H: 112"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
4 10 5 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 10 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
10 1 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFPVectorToAxis */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
9 1 7
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1024l1024+0l728-30l515+449l451+396l382+0l100+0l358+1464l585+1494l645+1494l482+571l992+1004l1132+973l738+638|</string>
      </dict>
    </dict>
  </lib>
</glyph>
