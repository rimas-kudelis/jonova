<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:W" format="2">
  <advance width="1888"/>
  <unicode hex="0057"/>
  <guideline x="0" y="528" angle="0"/>
  <guideline x="463" y="0" angle="106"/>
  <guideline x="1582" y="0" angle="108"/>
  <guideline x="1425" y="0" angle="74"/>
  <guideline x="1258" y="0" angle="74"/>
  <guideline x="798" y="0" angle="106"/>
  <guideline x="637" y="0" angle="72"/>
  <guideline x="475" y="0" angle="72"/>
  <guideline x="1251" y="0" angle="108"/>
  <guideline x="1013" y="0" angle="90"/>
  <anchor x="1267" y="1600" name="AccentAbove"/>
  <anchor x="1934" y="1600" name="AccentAboveRight"/>
  <anchor x="984" y="0" name="AccentBelow"/>
  <anchor x="984" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="1503" y="528" type="line" name="iv01"/>
      <point x="1936" y="1464" type="line" name="dh04"/>
      <point x="2088" y="1434" type="line" name="dh03"/>
      <point x="1423" y="0" type="line" name="ab01"/>
      <point x="1252" y="0" type="line"/>
      <point x="1111" y="943" type="line" name="iv02"/>
      <point x="637" y="0" type="line" name="ab02"/>
      <point x="465" y="0" type="line"/>
      <point x="304" y="1434" type="line" name="dh01"/>
      <point x="635" y="1464" type="line" name="dh02"/>
      <point x="740" y="528" type="line" name="iv03"/>
      <point x="1193" y="1434" type="line" name="dh05"/>
      <point x="1368" y="1434" type="line" name="dh06"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>iv01</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 1434 -20</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 302"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 182"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="T1 V: 182"/&gt;
    &lt;ttc code="alignt" point="dh04" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh05" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ab01" point2="dh04"/&gt;
    &lt;ttc code="interpolatev" point="iv02" point1="ab01" point2="dh04"/&gt;
    &lt;ttc code="interpolatev" point="iv03" point1="ab01" point2="dh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
9 7 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 6 2 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
12 6 11 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 3 1
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
5 3 1
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 3 1
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1888l1503+528l1936+1464l2088+1434l1423+0l1252+0l1111+943l637+0l465+0l304+1434l635+1464l740+528l1193+1434l1368+1434|</string>
      </dict>
    </dict>
  </lib>
</glyph>
