<?xml version="1.0" encoding="UTF-8"?>
<glyph name="uni0268.dotless" format="2">
  <advance width="576"/>
  <anchor x="571" y="1100" name="AccentAbove"/>
  <anchor x="538" y="1200" name="AccentAboveRight"/>
  <anchor x="238" y="0" name="AccentAttachedBelow"/>
  <anchor x="288" y="0" name="AccentBelow"/>
  <anchor x="288" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="318" y="974" type="line" name="hr00"/>
      <point x="546" y="1004" type="line" name="at01"/>
      <point x="606" y="1004" type="line"/>
      <point x="535" y="599" type="line" name="sh01"/>
      <point x="670" y="599" type="line" name="ah02"/>
      <point x="645" y="460" type="line"/>
      <point x="511" y="466" type="line" name="sv01"/>
      <point x="429" y="0" type="line" name="dh04"/>
      <point x="147" y="0" type="line" name="dh03"/>
      <point x="231" y="480" type="line" name="sv02"/>
      <point x="116" y="487" type="line" name="ah01"/>
      <point x="136" y="599" type="line"/>
      <point x="252" y="599" type="line" name="sh02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 473 126</string>
              <string>hstem 1004 -20</string>
              <string>hstem 1172 292</string>
              <string>vstem 374 292</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 282"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 282"/&gt;
    &lt;ttc code="singleh" point1="dh04" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="dh03" point2="sh02"/&gt;
    &lt;ttc code="interpolateh" point="rsb" point1="dh01" point2="dh02"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="dh04" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="sh01" point1="dh04" point2="at01"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sv01" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh02"/&gt;
    &lt;ttc code="mdeltav" point="av01" delta="6" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singlev" point1="av01" point2="sv03" stem="T1 H: 282"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
23 10 13 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
7 10 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
34 13 23
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
28
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
3 7 1
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
6 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
45 28 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
28
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 5
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>13165e970650fcdc2411967192398b5d3b209967ea9ea7547597567d24f2759860c585255b5afbbddb6ac8b3f1ddb2deb24ede5196d02e7099325e383a807dce</string>
      </dict>
    </dict>
  </lib>
</glyph>
