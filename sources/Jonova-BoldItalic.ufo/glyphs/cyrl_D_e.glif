<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:De" format="2">
  <advance width="1600"/>
  <unicode hex="0414"/>
  <guideline x="1407" y="0" angle="110"/>
  <guideline x="1073" y="0" angle="110"/>
  <guideline x="365" y="0" angle="70"/>
  <outline>
    <contour>
      <point x="1577" y="142" type="line" name="sv01"/>
      <point x="1496" y="-315" type="line" name="dh04"/>
      <point x="1209" y="-345" type="line" name="dh03"/>
      <point x="1270" y="0" type="line" name="ab01"/>
      <point x="330" y="0" type="line"/>
      <point x="274" y="-315" type="line" name="dh02"/>
      <point x="-12" y="-345" type="line" name="dh01"/>
      <point x="73" y="142" type="line" name="sv02"/>
      <point x="269" y="142" type="line" name="sh01"/>
      <point x="966" y="1434" type="line"/>
      <point x="1132" y="1464" type="line" name="at01"/>
      <point x="1381" y="142" type="line" name="ih01"/>
    </contour>
    <contour>
      <point x="896" y="974" type="line" name="iv01"/>
      <point x="886" y="974" type="line"/>
      <point x="442" y="142" type="line" name="sh02"/>
      <point x="1045" y="142" type="line" name="sh03"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sv01</string>
            <key>stems</key>
            <array>
              <string>hstem -324 -21</string>
              <string>hstem 0 142</string>
              <string>hstem 974 -20</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 282"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 282"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="sh01"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="dh04" point2="dh03"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 142"/&gt;
    &lt;ttc code="singleh" point1="ih01" point2="sh03" stem="T1 V: 302"/&gt;
    &lt;ttc code="alignv" point="dh03" align="round"/&gt;
    &lt;ttc code="alignv" point="dh01" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="ab01" point2="sv01" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="sv02" point2="sh01"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ab01" point2="at01"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh02"/&gt;
    &lt;ttc code="singlev" point1="sh02" point2="sh03"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
5 10 6 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 10 2 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
11 1 2
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
14 9
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 7
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
12 3 10
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>769472a4dcb12134bacd7784b57fefe2a3685f5031d731dcd79c2b8d4d0ccbe4c2c02404447cc9269aa5a6fa450e919adc55fda5f9d825f8cac3d3ae8b108f6e</string>
      </dict>
    </dict>
  </lib>
</glyph>
