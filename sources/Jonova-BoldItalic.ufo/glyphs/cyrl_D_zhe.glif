<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:Dzhe" format="2">
  <advance width="1440"/>
  <unicode hex="040F"/>
  <outline>
    <contour>
      <point x="132" y="0" type="line" name="ab01"/>
      <point x="384" y="1434" type="line" name="dh01"/>
      <point x="702" y="1464" type="line" name="dh02"/>
      <point x="467" y="132" type="line" name="sv01"/>
      <point x="1021" y="132" type="line" name="sv02"/>
      <point x="1250" y="1434" type="line" name="dh03"/>
      <point x="1568" y="1464" type="line" name="dh04"/>
      <point x="1310" y="0" type="line" name="ab02"/>
      <point x="862" y="0" type="line"/>
      <point x="806" y="-315" type="line" name="dh06"/>
      <point x="519" y="-345" type="line" name="dh05"/>
      <point x="580" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>ab01</string>
            <key>stems</key>
            <array>
              <string>hstem -324 -21</string>
              <string>hstem 0 132</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 302"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 302"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="T1 V: 282"/&gt;
    &lt;ttc code="alignv" point="dh05" align="round"/&gt;
    &lt;ttc code="alignt" point="dh02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh04" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="ab01" point2="sv01" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
2 7 1 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 7 5 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 10 10 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1440l132+0l384+1434l702+1464l467+132l1021+132l1250+1434l1568+1464l1310+0l862+0l806-315l519-345l580+0|</string>
      </dict>
    </dict>
  </lib>
</glyph>
