<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:Sha" format="2">
  <advance width="1824"/>
  <unicode hex="0428"/>
  <outline>
    <contour>
      <point x="444" y="1464" type="line" name="at01"/>
      <point x="444" y="132" type="line" name="sh02"/>
      <point x="755" y="132" type="line" name="sh03"/>
      <point x="755" y="1434" type="line"/>
      <point x="1067" y="1464" type="line" name="at02"/>
      <point x="1067" y="132" type="line" name="sh04"/>
      <point x="1379" y="132" type="line" name="sh05"/>
      <point x="1379" y="1434" type="line"/>
      <point x="1691" y="1464" type="line" name="at03"/>
      <point x="1691" y="0" type="line" name="sh06"/>
      <point x="132" y="0" type="line" name="sh01"/>
      <point x="132" y="1434" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 132</string>
              <string>hstem 1464 -20</string>
              <string>vstem 132 312</string>
              <string>vstem 755 312</string>
              <string>vstem 1379 312</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh03" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="8" ppm1="19" ppm2="19"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="8" ppm1="22" ppm2="22"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="-8" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh05" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh05" delta="8" ppm1="22" ppm2="22"/&gt;
    &lt;ttc code="mdeltah" point="sh05" delta="8" ppm1="19" ppm2="19"/&gt;
    &lt;ttc code="mdeltah" point="sh05" delta="-8" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="sh06" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="sh06" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at03" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh06" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="sh06" point2="sh02" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sh02" point2="sh04"/&gt;
    &lt;ttc code="singlev" point1="sh04" point2="sh05"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
175 2 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
223 2 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 2 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
5 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
223 6 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
175 6 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 6 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
9 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
1 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1824l444+1464l444+132l755+132l755+1434l1067+1464l1067+132l1379+132l1379+1434l1691+1464l1691+0l132+0l132+1434|</string>
      </dict>
    </dict>
  </lib>
</glyph>
