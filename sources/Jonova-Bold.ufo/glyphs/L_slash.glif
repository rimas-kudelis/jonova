<?xml version="1.0" encoding="UTF-8"?>
<glyph name="Lslash" format="2">
  <advance width="1088"/>
  <unicode hex="0141"/>
  <guideline x="0" y="468" angle="30"/>
  <guideline x="0" y="678" angle="30"/>
  <guideline x="609" y="0" angle="90"/>
  <guideline x="53" y="0" angle="90"/>
  <guideline x="724" y="0" angle="100"/>
  <outline>
    <contour>
      <point x="130" y="1434" type="line" name="at01"/>
      <point x="442" y="1464" type="line" name="at02"/>
      <point x="442" y="936" type="line" name="sh03"/>
      <point x="559" y="1004" type="line" name="mv01"/>
      <point x="593" y="813" type="line" name="ah01"/>
      <point x="442" y="725" type="line" name="iv01"/>
      <point x="442" y="122" type="line" name="sh02"/>
      <point x="1013" y="162" type="line"/>
      <point x="983" y="0" type="line"/>
      <point x="130" y="0" type="line" name="sh01"/>
      <point x="130" y="544" type="line" name="sv01"/>
      <point x="32" y="487" type="line"/>
      <point x="0" y="678" type="line" name="ah02"/>
      <point x="130" y="754" type="line" name="sh04"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 142</string>
              <string>hstem 1434 -20</string>
              <string>vstem 130 312</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 302"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="8" ppm1="12" ppm2="12"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="8" ppm1="25" ppm2="25"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="6" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh04"/&gt;
    &lt;ttc code="alignv" point="ah02" align="round"/&gt;
    &lt;ttc code="alignv" point="ah01" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh01" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="at02" point2="sh01"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sh03" stem="T1 H: 212"/&gt;
    &lt;ttc code="mdeltav" point="mv01" delta="5" ppm1="30" ppm2="30"/&gt;
    &lt;ttc code="interpolatev" point="sh04" point1="sh01" point2="at01"/&gt;
    &lt;ttc code="singlev" point1="sh04" point2="sv01" stem="T1 H: 212"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
6 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
63 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
15 4 1
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 3 values pushed */
45 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
5 1 9
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 4
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
92 3 1
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
13 9 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 4
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1088l130+1434l442+1464l442+936l559+1004l593+813l442+725l442+122l1013+162l983+0l130+0l130+544l32+487l0+678l130+754|</string>
      </dict>
    </dict>
  </lib>
</glyph>
