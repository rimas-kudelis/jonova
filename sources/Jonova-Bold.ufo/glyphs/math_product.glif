<?xml version="1.0" encoding="UTF-8"?>
<glyph name="math:product" format="2">
  <advance width="1600"/>
  <unicode hex="220F"/>
  <outline>
    <contour>
      <point x="140" y="1434" type="line" name="at01"/>
      <point x="1488" y="1434" type="line"/>
      <point x="1461" y="1271" type="line"/>
      <point x="1295" y="1289" type="line" name="sv01"/>
      <point x="1295" y="-278" type="line" name="sh01"/>
      <point x="1043" y="-278" type="line" name="sh02"/>
      <point x="1043" y="1289" type="line" name="sv02"/>
      <point x="557" y="1289" type="line" name="sv03"/>
      <point x="557" y="-278" type="line" name="sh04"/>
      <point x="305" y="-278" type="line" name="sh03"/>
      <point x="305" y="1289" type="line" name="sv04"/>
      <point x="112" y="1271" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at01</string>
            <key>stems</key>
            <array>
              <string>hstem -257 -21</string>
              <string>hstem 1289 145</string>
              <string>vstem 305 252</string>
              <string>vstem 1043 252</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh03" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="T1 V: 212"/&gt;
    &lt;ttc code="alignv" point="sh01" align="round"/&gt;
    &lt;ttc code="alignv" point="sh04" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="singlev" point1="at01" point2="sv01" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="sv02" point2="sv03"/&gt;
    &lt;ttc code="singlev" point1="sv03" point2="sv04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
8 8
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
3 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1600l140+1434l1488+1434l1461+1271l1295+1289l1295-278l1043-278l1043+1289l557+1289l557-278l305-278l305+1289l112+1271|</string>
      </dict>
    </dict>
  </lib>
</glyph>
