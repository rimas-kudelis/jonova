<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:em" format="2">
  <advance width="1344"/>
  <unicode hex="043C"/>
  <guideline x="0" y="667" angle="0"/>
  <guideline x="598" y="0" angle="65"/>
  <guideline x="441" y="0" angle="65"/>
  <guideline x="905" y="0" angle="115"/>
  <guideline x="598" y="0" angle="115"/>
  <guideline x="1037" y="0" angle="100"/>
  <guideline x="159" y="0" angle="80"/>
  <guideline x="12" y="0" angle="80"/>
  <guideline x="1328" y="0" angle="100"/>
  <outline>
    <contour>
      <point x="184" y="974" type="line" name="hr00"/>
      <point x="436" y="1004" type="line"/>
      <point x="668" y="510" type="line"/>
      <point x="678" y="510" type="line"/>
      <point x="908" y="1004" type="line"/>
      <point x="1160" y="974" type="line"/>
      <point x="1330" y="0" type="line"/>
      <point x="1041" y="-30" type="line"/>
      <point x="920" y="667" type="line"/>
      <point x="910" y="667" type="line"/>
      <point x="700" y="219" type="line"/>
      <point x="498" y="219" type="line"/>
      <point x="287" y="667" type="line"/>
      <point x="277" y="667" type="line"/>
      <point x="153" y="-30" type="line"/>
      <point x="14" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 21 -21</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>26a3a084ffb4f53056af96dd101e0a4ff5d2ddd5dee8f4c5575b131644e916b246898f438d985ef3652150781d47b0bac171867b45b48f3107c9ae9896bb466e</string>
      </dict>
    </dict>
  </lib>
</glyph>
