<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:w" format="2">
  <advance width="1080"/>
  <unicode hex="0077"/>
  <guideline x="0" y="269" angle="0"/>
  <guideline x="709" y="0" angle="108"/>
  <guideline x="418" y="0" angle="108"/>
  <guideline x="800" y="0" angle="72"/>
  <guideline x="371" y="0" angle="72"/>
  <guideline x="709" y="0" angle="72"/>
  <guideline x="281" y="0" angle="108"/>
  <guideline x="846" y="0" angle="108"/>
  <guideline x="280" y="0" angle="72"/>
  <guideline x="563" y="0" angle="90"/>
  <anchor x="700" y="1100" name="AccentAbove"/>
  <anchor x="1050" y="1100" name="AccentAboveRight"/>
  <anchor x="546" y="0" name="AccentBelow"/>
  <anchor x="610" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="1166" y="974" type="line" name="at03"/>
      <point x="800" y="0" type="line" name="ab01"/>
      <point x="709" y="0" type="line"/>
      <point x="633" y="678" type="line"/>
      <point x="626" y="678" type="line"/>
      <point x="371" y="0" type="line" name="ab02"/>
      <point x="280" y="0" type="line"/>
      <point x="170" y="974" type="line" name="at04"/>
      <point x="305" y="1004" type="line" name="at01"/>
      <point x="380" y="269" type="line"/>
      <point x="388" y="269" type="line"/>
      <point x="645" y="974" type="line" name="at05"/>
      <point x="737" y="974" type="line"/>
      <point x="809" y="269" type="line"/>
      <point x="817" y="269" type="line"/>
      <point x="1086" y="1004" type="line" name="at02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at03</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 974 -20</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at03" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at04" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at05" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>6c58a69acb07fe4745b1fb7b7187fadb08347f286ef5a494db1496ad59b6a4a86eb859693bf38987bf5334e3ebb24a4314852ef6f42bc4a1bffe799186f6118d</string>
      </dict>
    </dict>
  </lib>
</glyph>
