<?xml version="1.0" encoding="UTF-8"?>
<glyph name="grek:Alpha" format="2">
  <advance width="1344"/>
  <unicode hex="0391"/>
  <outline>
    <contour>
      <point x="1085" y="-30" type="line" name="sh02"/>
      <point x="925" y="365" type="line"/>
      <point x="339" y="365" type="line" name="av01"/>
      <point x="179" y="-30" type="line" name="sh04"/>
      <point x="59" y="0" type="line" name="sh03"/>
      <point x="650" y="1464" type="line" name="ih02"/>
      <point x="694" y="1464" type="line" name="ih03"/>
      <point x="1285" y="0" type="line" name="sh01"/>
    </contour>
    <contour>
      <point x="627" y="1102" type="line" name="ih01"/>
      <point x="388" y="487" type="line" name="sh05"/>
      <point x="875" y="487" type="line" name="sh06"/>
      <point x="637" y="1102" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh02</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 365 122</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh03"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="ih02" point2="ih03"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh05"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh06"/&gt;
    &lt;ttc code="alignv" point="av01" align="right"/&gt;
    &lt;ttc code="alignv" point="ih01" align="right"/&gt;
    &lt;ttc code="alignt" point="ih02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh03" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh04" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="av01" point2="sh05" stem="Y: 122"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
0 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
8 5 6
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1344l1085-30l925+365l339+365l179-30l59+0l650+1464l694+1464l1285+0|l627+1102l388+487l875+487l637+1102|</string>
      </dict>
    </dict>
  </lib>
</glyph>
