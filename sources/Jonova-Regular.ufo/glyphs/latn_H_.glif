<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:H" format="2">
  <advance width="1504"/>
  <unicode hex="0048"/>
  <anchor x="752" y="1600" name="AccentAbove"/>
  <anchor x="1102" y="1600" name="AccentAboveRight"/>
  <anchor x="752" y="0" name="AccentBelow"/>
  <anchor x="268" y="0" name="AccentCedilla"/>
  <anchor x="752" y="670" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="364" y="1464" type="line" name="sh03"/>
      <point x="364" y="839" type="line" name="iv01"/>
      <point x="1140" y="839" type="line"/>
      <point x="1140" y="1434" type="line" name="sh05"/>
      <point x="1322" y="1464" type="line" name="sh04"/>
      <point x="1322" y="0" type="line" name="ab01"/>
      <point x="1140" y="0" type="line" name="sh06"/>
      <point x="1140" y="717" type="line"/>
      <point x="364" y="717" type="line" name="sv01"/>
      <point x="364" y="0" type="line" name="sh02"/>
      <point x="182" y="0" type="line" name="sh01"/>
      <point x="182" y="1434" type="line" name="at01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh03</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 717 122</string>
              <string>hstem 1434 -20</string>
              <string>vstem 182 182</string>
              <string>vstem 1140 182</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" round="true" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03"/&gt;
    &lt;ttc code="mdeltah" point="rsb" delta="-5" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh04" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh04" delta="8" ppm1="17" ppm2="17"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh05" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="sh06"/&gt;
    &lt;ttc code="alignt" point="sh03" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh05" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh04" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="sh03" point2="sh02"/&gt;
    &lt;ttc code="mdeltav" point="iv01" delta="3" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sv01" stem="Y: 122"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
9 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
3 13 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
143 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
3 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 0 9
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 3 values pushed */
10 1 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1504l364+1464l364+839l1140+839l1140+1434l1322+1464l1322+0l1140+0l1140+717l364+717l364+0l182+0l182+1434|</string>
      </dict>
    </dict>
  </lib>
</glyph>
