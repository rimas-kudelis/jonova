<?xml version="1.0" encoding="UTF-8"?>
<glyph name="Mu" format="2">
  <advance width="1824"/>
  <unicode hex="039C"/>
  <outline>
    <contour>
      <point x="408" y="1061" type="line" name="iv01"/>
      <point x="398" y="1061" type="line"/>
      <point x="206" y="-30" type="line" name="sh02"/>
      <point x="86" y="0" type="line" name="sh01"/>
      <point x="339" y="1434" type="line" name="mh01"/>
      <point x="448" y="1464" type="line"/>
      <point x="903" y="314" type="line" name="ih01"/>
      <point x="913" y="314" type="line"/>
      <point x="1378" y="1464" type="line" name="at01"/>
      <point x="1486" y="1434" type="line"/>
      <point x="1738" y="0" type="line" name="sh03"/>
      <point x="1538" y="-30" type="line" name="sh04"/>
      <point x="1356" y="1061" type="line" name="iv02"/>
      <point x="1346" y="1061" type="line"/>
      <point x="904" y="-30" type="line" name="ab01"/>
      <point x="839" y="-30" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>iv01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 1434 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="mdeltah" point="mh01" delta="5" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh03" round="true"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="sh01" point2="sh03"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 192"/&gt;
    &lt;ttc code="alignv" point="ih01" align="left"/&gt;
    &lt;ttc code="alignt" point="mh01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh04" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="mh01" point2="sh02"/&gt;
    &lt;ttc code="interpolatev" point="iv02" point1="at01" point2="sh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
2 5
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
12 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
6 3 10
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
11 7
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 4 2
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
12 8 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>3a16e165e2c28487d38fcd7ad4c9675da4d4e09a33ea386c17b2bccd7ed43c5fcbe8b1d3f2b5144beb2e0eb402624431e379b90fd3d7acd687d9c64cb62b77ea</string>
      </dict>
    </dict>
  </lib>
</glyph>
