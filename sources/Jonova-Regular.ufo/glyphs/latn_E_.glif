<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:E" format="2">
  <advance width="1088"/>
  <unicode hex="0045"/>
  <guideline x="986" y="0" angle="90"/>
  <guideline x="731" y="0" angle="80"/>
  <anchor x="624" y="1600" name="AccentAbove"/>
  <anchor x="974" y="1600" name="AccentAboveRight"/>
  <anchor x="878" y="0" name="AccentAttachedBelow"/>
  <anchor x="624" y="0" name="AccentBelow"/>
  <anchor x="624" y="780" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="182" y="1434" type="line" name="sh01"/>
      <point x="986" y="1434" type="line" name="sh02"/>
      <point x="961" y="1292" type="line"/>
      <point x="364" y="1312" type="line" name="sh03"/>
      <point x="364" y="839" type="line" name="iv01"/>
      <point x="879" y="839" type="line" name="sh04"/>
      <point x="857" y="717" type="line"/>
      <point x="364" y="717" type="line" name="sh05"/>
      <point x="364" y="122" type="line" name="sv01"/>
      <point x="986" y="142" type="line" name="ah01"/>
      <point x="961" y="0" type="line"/>
      <point x="182" y="0" type="line" name="ab01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 142</string>
              <string>hstem 717 122</string>
              <string>hstem 1292 142</string>
              <string>vstem 182 182</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="6" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh02"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh03" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh04" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh05"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="rsb"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh03" stem="Y: 122"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="sh01" point2="ab01"/&gt;
    &lt;ttc code="singlev" point1="iv01" point2="sh05" stem="Y: 122"/&gt;
    &lt;ttc code="singlev" point1="ab01" point2="sv01" stem="Y: 122"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
13 9 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
4 0 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1088l182+1434l986+1434l961+1292l364+1312l364+839l879+839l857+717l364+717l364+122l986+142l961+0l182+0|</string>
      </dict>
    </dict>
  </lib>
</glyph>
