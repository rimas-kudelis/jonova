<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:Sha" format="2">
  <advance width="1824"/>
  <unicode hex="0428"/>
  <outline>
    <contour>
      <point x="354" y="1464" type="line" name="at01"/>
      <point x="354" y="122" type="line" name="dh02"/>
      <point x="820" y="122" type="line" name="dh05"/>
      <point x="820" y="1434" type="line"/>
      <point x="1002" y="1464" type="line" name="at02"/>
      <point x="1002" y="122" type="line" name="dh06"/>
      <point x="1468" y="122" type="line" name="dh04"/>
      <point x="1468" y="1434" type="line"/>
      <point x="1650" y="1464" type="line" name="at03"/>
      <point x="1650" y="0" type="line" name="dh03"/>
      <point x="172" y="0" type="line" name="dh01"/>
      <point x="172" y="1434" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 122</string>
              <string>hstem 1464 -20</string>
              <string>vstem 172 182</string>
              <string>vstem 820 182</string>
              <string>vstem 1468 182</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 192"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 192"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="X: 192"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at03" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="dh01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="dh01" point2="dh02" stem="Y: 122"/&gt;
    &lt;ttc code="singlev" point1="dh02" point2="dh06"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
1 7 10 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
6 7 9 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 7 2 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
1 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1824l354+1464l354+122l820+122l820+1434l1002+1464l1002+122l1468+122l1468+1434l1650+1464l1650+0l172+0l172+1434|</string>
      </dict>
    </dict>
  </lib>
</glyph>
