<?xml version="1.0" encoding="UTF-8"?>
<glyph name="grek:Chi" format="2">
  <advance width="1248"/>
  <unicode hex="03A7"/>
  <outline>
    <contour>
      <point x="593" y="600" type="line" name="hr00"/>
      <point x="199" y="-30" type="line" name="sh02"/>
      <point x="72" y="0" type="line" name="sh01"/>
      <point x="520" y="717" type="line"/>
      <point x="72" y="1434" type="line" name="sh03"/>
      <point x="272" y="1464" type="line" name="sh04"/>
      <point x="620" y="892" type="line"/>
      <point x="630" y="892" type="line"/>
      <point x="987" y="1464" type="line" name="sh07"/>
      <point x="1114" y="1434" type="line" name="sh06"/>
      <point x="702" y="775" type="line"/>
      <point x="1186" y="0" type="line" name="sh05"/>
      <point x="986" y="-30" type="line" name="sh08"/>
      <point x="603" y="600" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh03"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh05"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="sh06"/&gt;
    &lt;ttc code="singleh" point1="sh06" point2="sh07" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="sh08" stem="X: 192"/&gt;
    &lt;ttc code="alignt" point="sh04" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh07" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh08" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="sh01" point1="sh02" point2="sh04"/&gt;
    &lt;ttc code="interpolatev" point="sh03" point1="sh02" point2="sh04"/&gt;
    &lt;ttc code="interpolatev" point="sh06" point1="sh02" point2="sh04"/&gt;
    &lt;ttc code="interpolatev" point="sh05" point1="sh02" point2="sh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
14
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
1 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 7
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
8 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 7
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  12
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  12 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
2 1 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
4 1 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
9 1 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
11 1 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1248l593+600l199-30l72+0l520+717l72+1434l272+1464l620+892l630+892l987+1464l1114+1434l702+775l1186+0l986-30l603+600|</string>
      </dict>
    </dict>
  </lib>
</glyph>
