<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:k" format="2">
  <advance width="1024"/>
  <unicode hex="006B"/>
  <guideline x="0" y="75" angle="45"/>
  <guideline x="0" y="232" angle="45"/>
  <guideline x="0" y="613" angle="0"/>
  <guideline x="1009" y="0" angle="130"/>
  <guideline x="810" y="0" angle="130"/>
  <guideline x="1737" y="0" angle="90"/>
  <anchor x="812" y="1600" name="AccentAbove"/>
  <anchor x="882" y="1400" name="AccentAboveRight"/>
  <anchor x="560" y="0" name="AccentBelow"/>
  <anchor x="532" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="1009" y="0" type="line" name="dh04"/>
      <point x="819" y="-30" type="line" name="dh03"/>
      <point x="494" y="477" type="line"/>
      <point x="484" y="477" type="line"/>
      <point x="382" y="390" type="line" name="sh01"/>
      <point x="314" y="0" type="line" name="dh01"/>
      <point x="152" y="0" type="line" name="dh02"/>
      <point x="410" y="1464" type="line" name="sh02"/>
      <point x="547" y="1494" type="line"/>
      <point x="577" y="1494" type="line" name="sh03"/>
      <point x="410" y="546" type="line"/>
      <point x="420" y="546" type="line"/>
      <point x="949" y="1004" type="line" name="ih01"/>
      <point x="1070" y="974" type="line" name="at01"/>
      <point x="594" y="571" type="line" name="iv01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh04</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 21 -21</string>
              <string>hstem 1494 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 162"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="dh01" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="sh02"/&gt;
    &lt;ttc code="mdeltah" point="sh02" delta="4" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03" stem="X: 162"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="-2" ppm1="12" ppm2="12"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="dh03" point2="dh04"/&gt;
    &lt;ttc code="singleh" point1="dh04" point2="rsb"/&gt;
    &lt;ttc code="alignv" point="sh03" align="right"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="ih01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="dh03" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh04" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh01" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ih01" point2="dh03"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
6 7 5 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 8 1 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
43 7 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
9 7
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
54 9 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
12 1 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  12
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  12 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  13
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  13 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
14 12 1
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1024l1009+0l819-30l494+477l484+477l382+390l314+0l152+0l410+1464l547+1494l577+1494l410+546l420+546l949+1004l1070+974l594+571|</string>
      </dict>
    </dict>
  </lib>
</glyph>
