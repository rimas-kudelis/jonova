<?xml version="1.0" encoding="UTF-8"?>
<glyph name="arrowdblup" format="2">
  <advance width="2048"/>
  <unicode hex="21D1"/>
  <outline>
    <contour>
      <point x="1318" y="-30" type="line" name="ah01"/>
      <point x="1318" y="758" type="line" name="sv01"/>
      <point x="1678" y="758" type="line" name="iv01"/>
      <point x="1102" y="1335" type="line"/>
      <point x="529" y="758" type="line"/>
      <point x="890" y="758" type="line" name="dv02"/>
      <point x="890" y="-30" type="line" name="sh02"/>
      <point x="808" y="-30" type="line" name="sh01"/>
      <point x="808" y="676" type="line" name="dv01"/>
      <point x="416" y="676" type="line"/>
      <point x="399" y="676"/>
      <point x="375" y="700"/>
      <point x="375" y="717" type="qcurve"/>
      <point x="375" y="735"/>
      <point x="387" y="747" type="qcurve"/>
      <point x="1104" y="1464" type="line" name="at01"/>
      <point x="1824" y="744" type="line"/>
      <point x="1827" y="741"/>
      <point x="1834" y="726"/>
      <point x="1834" y="717" type="qcurve"/>
      <point x="1834" y="700"/>
      <point x="1809" y="676"/>
      <point x="1792" y="676" type="qcurve" name="sv02"/>
      <point x="1400" y="676" type="line"/>
      <point x="1400" y="-30" type="line" name="sh03"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>ah01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 676 82</string>
              <string>hstem 1464 -20</string>
              <string>vstem 808 82</string>
              <string>vstem 1318 82</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh03" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ah01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="dv02" stem="Y: 102"/&gt;
    &lt;ttc code="singlev" point1="dv02" point2="sv01"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ah01" point2="at01"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv02"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
6 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 6
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 1 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
2 0 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>47430e73fe9c17ff8d64961a3cb25c7265a25f151ba77185c3fb3cd7378b9d54194483adb96c1570a9dd9ac100be96a3868bf0c8ba992eba5fe2b8a9cc1e1f14</string>
      </dict>
    </dict>
  </lib>
</glyph>
