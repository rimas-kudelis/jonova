<?xml version="1.0" encoding="UTF-8"?>
<glyph name="grek:pi" format="2">
  <advance width="1248"/>
  <unicode hex="03C0"/>
  <outline>
    <contour>
      <point x="561" y="872" type="line" name="sv01"/>
      <point x="408" y="0" type="line" name="dh02"/>
      <point x="246" y="0" type="line" name="dh01"/>
      <point x="398" y="864" type="line" name="sv02"/>
      <point x="211" y="849" type="line"/>
      <point x="233" y="974" type="line" name="at01"/>
      <point x="1336" y="974" type="line"/>
      <point x="1314" y="849" type="line"/>
      <point x="1154" y="863" type="line" name="sv03"/>
      <point x="1002" y="0" type="line" name="dh04"/>
      <point x="840" y="0" type="line" name="dh03"/>
      <point x="993" y="872" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sv01</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 872 102</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 162"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 162"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="dh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh04" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="at01" point2="sv01" stem="Y: 102"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02" align="round"/&gt;
    &lt;ttc code="singlev" point1="sv02" point2="sv03" align="round"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
1 7 2 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 7 10 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1248l561+872l408+0l246+0l398+864l211+849l233+974l1336+974l1314+849l1154+863l1002+0l840+0l993+872|</string>
      </dict>
    </dict>
  </lib>
</glyph>
