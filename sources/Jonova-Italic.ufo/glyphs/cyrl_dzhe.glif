<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:dzhe" format="2">
  <advance width="1120"/>
  <unicode hex="045F"/>
  <outline>
    <contour>
      <point x="491" y="1004" type="line" name="dh04"/>
      <point x="331" y="102" type="line" name="sv01"/>
      <point x="825" y="102" type="line" name="sv02"/>
      <point x="979" y="974" type="line" name="dh05"/>
      <point x="1117" y="1004" type="line" name="at01"/>
      <point x="1147" y="1004" type="line" name="dh06"/>
      <point x="970" y="0" type="line" name="ab01"/>
      <point x="642" y="0" type="line"/>
      <point x="586" y="-312" type="line" name="dh02"/>
      <point x="449" y="-345" type="line" name="av01"/>
      <point x="419" y="-345" type="line" name="dh01"/>
      <point x="480" y="0" type="line" name="ab02"/>
      <point x="152" y="0" type="line"/>
      <point x="323" y="974" type="line" name="dh03"/>
      <point x="461" y="1004" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh04</string>
            <key>stems</key>
            <array>
              <string>hstem -324 -21</string>
              <string>hstem 0 102</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 162"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 162"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="X: 162"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignt" point="dh04" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="ab02" point2="sv01" stem="Y: 102"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
8 7 10 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
0 7 13 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
5 7 3 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
1 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1120l491+1004l331+102l825+102l979+974l1117+1004l1147+1004l970+0l642+0l586-312l449-345l419-345l480+0l152+0l323+974l461+1004|</string>
      </dict>
    </dict>
  </lib>
</glyph>
