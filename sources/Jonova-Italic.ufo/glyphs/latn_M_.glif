<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:M" format="2">
  <advance width="1824"/>
  <unicode hex="004D"/>
  <guideline x="0" y="1061" angle="0"/>
  <guideline x="823" y="0" angle="112"/>
  <guideline x="1036" y="0" angle="112"/>
  <guideline x="913" y="0" angle="68"/>
  <guideline x="782" y="0" angle="68"/>
  <guideline x="1735" y="0" angle="100"/>
  <guideline x="207" y="0" angle="80"/>
  <guideline x="1529" y="0" angle="100"/>
  <guideline x="82" y="0" angle="80"/>
  <anchor x="1194" y="1600" name="AccentAbove"/>
  <anchor x="1928" y="1600" name="AccentAboveRight"/>
  <anchor x="914" y="0" name="AccentBelow"/>
  <anchor x="864" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="591" y="1061" type="line" name="iv01"/>
      <point x="581" y="1061" type="line"/>
      <point x="196" y="-30" type="line" name="sh02"/>
      <point x="82" y="0" type="line" name="sh01"/>
      <point x="587" y="1434" type="line"/>
      <point x="702" y="1464" type="line" name="at01"/>
      <point x="954" y="314" type="line" name="iv02"/>
      <point x="964" y="314" type="line"/>
      <point x="1612" y="1464" type="line" name="at02"/>
      <point x="1722" y="1434" type="line"/>
      <point x="1722" y="0" type="line" name="dh02"/>
      <point x="1540" y="0" type="line" name="dh01"/>
      <point x="1540" y="1061" type="line" name="iv03"/>
      <point x="1530" y="1061" type="line"/>
      <point x="894" y="-30" type="line" name="ab01"/>
      <point x="829" y="-30" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>iv01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 1464 -20</string>
              <string>vstem 1540 182</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 192"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ab01" point2="at01"/&gt;
    &lt;ttc code="interpolatev" point="iv02" point1="at01" point2="ab01"/&gt;
    &lt;ttc code="interpolatev" point="iv03" point1="at02" point2="dh01"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
10 8 11 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
2 6
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 14 5
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
6 5 14
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
12 8 11
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>04d32ba1ef6ed7f61aa424596f23951105b8b2910801d5741c8b1c972084734a84ef647271c8ce633c87ce717597949be5960cbd25c2da2003c453e90ab326c5</string>
      </dict>
    </dict>
  </lib>
</glyph>
