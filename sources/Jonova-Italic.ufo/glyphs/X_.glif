<?xml version="1.0" encoding="UTF-8"?>
<glyph name="X" format="2">
  <advance width="1248"/>
  <unicode hex="0058"/>
  <guideline x="0" y="725" angle="0"/>
  <guideline x="218" y="0" angle="58"/>
  <guideline x="72" y="0" angle="58"/>
  <guideline x="1187" y="0" angle="122"/>
  <guideline x="968" y="0" angle="122"/>
  <guideline x="72" y="0" angle="90"/>
  <guideline x="986" y="0" angle="90"/>
  <anchor x="904" y="1600" name="AccentAbove"/>
  <anchor x="1174" y="1600" name="AccentAboveRight"/>
  <anchor x="624" y="0" name="AccentBelow"/>
  <anchor x="624" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="698" y="600" type="line" name="hr00"/>
      <point x="193" y="-30" type="line" name="dh07"/>
      <point x="72" y="0" type="line" name="dh08"/>
      <point x="646" y="717" type="line"/>
      <point x="324" y="1434" type="line" name="dh01"/>
      <point x="530" y="1464" type="line" name="dh02"/>
      <point x="777" y="892" type="line"/>
      <point x="787" y="892" type="line"/>
      <point x="1245" y="1464" type="line" name="dh05"/>
      <point x="1366" y="1434" type="line" name="dh06"/>
      <point x="838" y="775" type="line"/>
      <point x="1186" y="0" type="line" name="dh04"/>
      <point x="980" y="-30" type="line" name="dh03"/>
      <point x="708" y="600" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 192"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 192"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="X: 122"/&gt;
    &lt;ttc code="doubleh" point1="dh07" point2="dh08" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="dh02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh05" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh06" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="dh07" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh03" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh08" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh04" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
5 8 4 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
11 8 12 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 6 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
2 6 1 4
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 18
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  12
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  12 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 10
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1248l698+600l193-30l72+0l646+717l324+1434l530+1464l777+892l787+892l1245+1464l1366+1434l838+775l1186+0l980-30l708+600|</string>
      </dict>
    </dict>
  </lib>
</glyph>
