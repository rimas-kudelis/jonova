<?xml version="1.0" encoding="UTF-8"?>
<glyph name="multiply" format="2">
  <advance width="1152"/>
  <unicode hex="00D7"/>
  <guideline x="0" y="715" angle="0"/>
  <guideline x="512" y="0" angle="90"/>
  <outline>
    <contour>
      <point x="345" y="888" type="line" name="ah01"/>
      <point x="446" y="974" type="line" name="at01"/>
      <point x="694" y="673" type="line" name="iv01"/>
      <point x="1048" y="974" type="line" name="at02"/>
      <point x="1119" y="888" type="line" name="ah03"/>
      <point x="765" y="587" type="line" name="ih01"/>
      <point x="1013" y="286" type="line" name="ah04"/>
      <point x="912" y="200" type="line" name="av01"/>
      <point x="664" y="501" type="line" name="iv02"/>
      <point x="310" y="200" type="line" name="av02"/>
      <point x="239" y="286" type="line" name="ah02"/>
      <point x="593" y="587" type="line" name="ih02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>ah01</string>
            <key>stems</key>
            <array>
              <string>hstem 221 -21</string>
              <string>hstem 974 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="alignh" point="ah03" align="round"/&gt;
    &lt;ttc code="alignh" point="ah04" align="round"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="ah03" point2="ah01"/&gt;
    &lt;ttc code="interpolateh" point="ih02" point1="ah02" point2="ah04"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignv" point="av02" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 0"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="at02" point2="av01"/&gt;
    &lt;ttc code="interpolatev" point="iv02" point1="at01" point2="av02"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 4 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
11 10 6
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
7
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 16
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
2 3 7
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
8 1 9
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1152l345+888l446+974l694+673l1048+974l1119+888l765+587l1013+286l912+200l664+501l310+200l239+286l593+587|</string>
      </dict>
    </dict>
  </lib>
</glyph>
