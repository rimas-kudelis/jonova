<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:x" format="2">
  <advance width="768"/>
  <unicode hex="0078"/>
  <anchor x="350" y="1100" name="AccentAbove"/>
  <anchor x="600" y="1100" name="AccentAboveRight"/>
  <anchor x="300" y="0" name="AccentBelow"/>
  <anchor x="300" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="175" y="1004" type="line" name="sh01"/>
      <point x="393" y="602" type="line"/>
      <point x="401" y="602" type="line"/>
      <point x="632" y="1004" type="line" name="sh02"/>
      <point x="725" y="974" type="line" name="ah02"/>
      <point x="449" y="509" type="line"/>
      <point x="449" y="499" type="line" name="dh02"/>
      <point x="725" y="0" type="line" name="ah03"/>
      <point x="591" y="-30" type="line" name="sh03"/>
      <point x="376" y="372" type="line"/>
      <point x="368" y="372" type="line"/>
      <point x="136" y="-30" type="line" name="sh04"/>
      <point x="44" y="0" type="line" name="ah04"/>
      <point x="319" y="464" type="line"/>
      <point x="319" y="474" type="line" name="dh01"/>
      <point x="44" y="974" type="line" name="ah01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="alignh" point="ah03" align="round"/&gt;
    &lt;ttc code="alignh" point="ah04" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" round="true"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh01" stem="X: 122"/&gt;
    &lt;ttc code="mdeltah" point="ah02" delta="8" ppm1="12" ppm2="12"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="mdeltah" point="ah03" delta="8" ppm1="12" ppm2="12"/&gt;
    &lt;ttc code="singleh" point1="ah03" point2="sh03" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah04" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="mdeltah" point="dh01" delta="8" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="sh03" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh04" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="ah03" point1="sh03" point2="sh01"/&gt;
    &lt;ttc code="interpolatev" point="ah01" point1="sh03" point2="sh01"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
16
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
8 15 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
14 15 4
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 5
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
182 5 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
2 3 8
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
7 8 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 11 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 8 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w768l175+1004l393+602l401+602l632+1004l725+974l449+509l449+499l725+0l591-30l376+372l368+372l136-30l44+0l319+464l319+474l44+974|</string>
      </dict>
    </dict>
  </lib>
</glyph>
