<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:W" format="2">
  <advance width="1416"/>
  <unicode hex="0057"/>
  <anchor x="750" y="1600" name="AccentAbove"/>
  <anchor x="1400" y="1600" name="AccentAboveRight"/>
  <anchor x="700" y="0" name="AccentBelow"/>
  <anchor x="600" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="1057" y="348" type="line" name="sv01"/>
      <point x="1064" y="348" type="line"/>
      <point x="1295" y="1464" type="line" name="sh01"/>
      <point x="1385" y="1434" type="line" name="ah02"/>
      <point x="1076" y="0" type="line" name="dh06"/>
      <point x="984" y="0" type="line" name="dh05"/>
      <point x="716" y="1131" type="line" name="ih01"/>
      <point x="708" y="1131" type="line"/>
      <point x="432" y="0" type="line" name="dh03"/>
      <point x="341" y="0" type="line" name="dh04"/>
      <point x="32" y="1434" type="line" name="ah01"/>
      <point x="182" y="1464" type="line" name="sh02"/>
      <point x="414" y="348" type="line"/>
      <point x="422" y="348" type="line" name="av01"/>
      <point x="693" y="1464" type="line" name="dh01"/>
      <point x="785" y="1464" type="line" name="dh02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sv01</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 122"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="X: 122"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh01" stem="X: 122"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="dh01" point2="dh02"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="alignv" point="av01" align="left"/&gt;
    &lt;ttc code="alignv" point="ih01" align="right"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="dh01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="dh06" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh03" zone="b: 0"/&gt;
    &lt;ttc code="mdeltav" point="av01" delta="-5" ppm1="17" ppm2="18"/&gt;
    &lt;ttc code="singlev" point1="av01" point2="sv01"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
15 5 14 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
9 5 8 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
4 5 5 4
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 3 values pushed */
133 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
53 1 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
92 3 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
2 5
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
231 15 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
85 15 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
6 14 15
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 3 values pushed */
46 6 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
35 8 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
35 9 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
6
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 5 values pushed */
131 13 147 13 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
226 13 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
237 6 1
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>73adafe6cf611b41c75aa7cb8ce28e362bee3e7930e7431befdf608ddfc6716fb98c87fd6f40c154436ec8213dea109d58880d85b0867346d11206bb59a79b31</string>
      </dict>
    </dict>
  </lib>
</glyph>
