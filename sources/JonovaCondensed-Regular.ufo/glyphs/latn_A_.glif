<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:A" format="2">
  <advance width="1008"/>
  <unicode hex="0041"/>
  <anchor x="500" y="1600" name="AccentAbove"/>
  <anchor x="750" y="1600" name="AccentAboveRight"/>
  <anchor x="888" y="0" name="AccentAttachedBelow"/>
  <anchor x="500" y="0" name="AccentBelow"/>
  <anchor x="400" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="814" y="-30" type="line" name="sh02"/>
      <point x="694" y="365" type="line" name="sv01"/>
      <point x="254" y="365" type="line"/>
      <point x="134" y="-30" type="line" name="sh04"/>
      <point x="44" y="0" type="line" name="sh03"/>
      <point x="488" y="1464" type="line" name="ih01"/>
      <point x="521" y="1464" type="line"/>
      <point x="964" y="0" type="line" name="sh01"/>
    </contour>
    <contour>
      <point x="470" y="1102" type="line" name="sh05"/>
      <point x="291" y="487" type="line" name="sh06"/>
      <point x="656" y="487" type="line" name="sh07"/>
      <point x="478" y="1102" type="line" name="av01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh02</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 365 122</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh03"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="sh03" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="ih01" point2="sh05"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh06"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh07"/&gt;
    &lt;ttc code="alignv" point="av01" align="right"/&gt;
    &lt;ttc code="alignt" point="ih01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh04" zone="b: 0"/&gt;
    &lt;ttc code="interpolatev" point="sh07" point1="ih01" point2="sh02"/&gt;
    &lt;ttc code="mdeltav" point="sh07" delta="-2" ppm1="18" ppm2="19"/&gt;
    &lt;ttc code="singlev" point1="sh07" point2="sv01" stem="Y: 102"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
9 7 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
73 7 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
70 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
5 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 4 7
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
6 9 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
9 10 1
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFPVectorToAxis */
RUTG[ ]	/* RoundUpToGrid */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
10 5 0
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 5 values pushed */
150 10 166 10 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
1 1
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1008l814-30l694+365l254+365l134-30l44+0l488+1464l521+1464l964+0|l470+1102l291+487l656+487l478+1102|</string>
      </dict>
    </dict>
  </lib>
</glyph>
