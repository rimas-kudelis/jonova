<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:y" format="2">
  <advance width="720"/>
  <unicode hex="0079"/>
  <anchor x="400" y="1100" name="AccentAbove"/>
  <anchor x="650" y="1100" name="AccentAboveRight"/>
  <anchor x="300" y="-400" name="AccentBelow"/>
  <anchor x="300" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="170" y="1004" type="line" name="sh01"/>
      <point x="405" y="204" type="line"/>
      <point x="413" y="204" type="line" name="ih01"/>
      <point x="607" y="1004" type="line" name="sh02"/>
      <point x="689" y="974" type="line" name="ah02"/>
      <point x="444" y="-30" type="line" name="dh02"/>
      <point x="407" y="-181"/>
      <point x="333" y="-362"/>
      <point x="253" y="-459"/>
      <point x="164" y="-490"/>
      <point x="99" y="-490" type="qcurve" name="ab01"/>
      <point x="113" y="-388" type="line"/>
      <point x="140" y="-388"/>
      <point x="208" y="-366"/>
      <point x="269" y="-291"/>
      <point x="326" y="-150"/>
      <point x="356" y="-30" type="qcurve" name="dh01"/>
      <point x="39" y="974" type="line" name="ah01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem -469 -21</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 122"/&gt;
    &lt;ttc code="mdeltah" point="ah01" delta="2" ppm1="10" ppm2="10"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh01" stem="X: 122"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="dh01" point2="dh02"/&gt;
    &lt;ttc code="mdeltah" point="ah02" delta="8" ppm1="10" ppm2="10"/&gt;
    &lt;ttc code="mdeltah" point="ah02" delta="8" ppm1="16" ppm2="16"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 1"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
18
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19
MDAP[1]	/* MoveDirectAbsPt */
RDTG[ ]	/* RoundDownToGrid */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
18
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
22 17 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
54 17 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 17 4
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 5 values pushed */
42 5 58 5 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
16 5
MIRP[10100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
137 16 1
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  16
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  16 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>93350362ce789ec366a9b815706c2c64fda4a8da382f7a8b5df6c0530d06f19f3f602646f29952836faadc3276b79ea6338b01a16bd720505d5aeecf5d9e9062</string>
      </dict>
    </dict>
  </lib>
</glyph>
