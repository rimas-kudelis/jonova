<?xml version="1.0" encoding="UTF-8"?>
<glyph name="misc:house" format="2">
  <advance width="1248"/>
  <unicode hex="2302"/>
  <guideline x="1843" y="0" angle="135"/>
  <guideline x="624" y="0" angle="90"/>
  <guideline x="-595" y="0" angle="45"/>
  <outline>
    <contour>
      <point x="122" y="717" type="line" name="sh01"/>
      <point x="624" y="1219" type="line" name="av01"/>
      <point x="1126" y="717" type="line" name="sh02"/>
      <point x="1126" y="0" type="line" name="ab01"/>
      <point x="122" y="0" type="line"/>
    </contour>
    <contour>
      <point x="1004" y="658" type="line" name="sh03"/>
      <point x="624" y="1038" type="line"/>
      <point x="244" y="658" type="line" name="sh04"/>
      <point x="244" y="122" type="line" name="sv01"/>
      <point x="1004" y="122" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem 0 122</string>
              <string>hstem 1219 -20</string>
              <string>vstem 122 122</string>
              <string>vstem 1004 122</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh02" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh02" point2="sh03" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="ab01" point2="sv01" stem="Y: 122"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
5 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
7 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
8 2
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1248l122+717l624+1219l1126+717l1126+0l122+0|l1004+658l624+1038l244+658l244+122l1004+122|</string>
      </dict>
    </dict>
  </lib>
</glyph>
