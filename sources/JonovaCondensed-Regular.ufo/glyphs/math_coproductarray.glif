<?xml version="1.0" encoding="UTF-8"?>
<glyph name="math:coproductarray" format="2">
  <advance width="1600"/>
  <unicode hex="2210"/>
  <outline>
    <contour>
      <point x="1463" y="-278" type="line" name="dv01"/>
      <point x="112" y="-278" type="line"/>
      <point x="136" y="-134" type="line" name="sv01"/>
      <point x="305" y="-143" type="line" name="sh01"/>
      <point x="305" y="1434" type="line" name="at01"/>
      <point x="427" y="1434" type="line"/>
      <point x="427" y="-143" type="line" name="sh02"/>
      <point x="1173" y="-143" type="line" name="sh04"/>
      <point x="1173" y="1434" type="line" name="at02"/>
      <point x="1295" y="1434" type="line"/>
      <point x="1295" y="-143" type="line" name="sh03"/>
      <point x="1488" y="-134" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dv01</string>
            <key>stems</key>
            <array>
              <string>hstem -278 135</string>
              <string>hstem 1434 -20</string>
              <string>vstem 305 122</string>
              <string>vstem 1173 122</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="rsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="rsb" point2="sh03" round="true"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="sh03" stem="Y: 122"/&gt;
    &lt;ttc code="singlev" point1="sh03" point2="sv01" align="round"/&gt;
    &lt;ttc code="singlev" point1="sh03" point2="sh02"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
6 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
7 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
10 2 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1600l1463-278l112-278l136-134l305-143l305+1434l427+1434l427-143l1173-143l1173+1434l1295+1434l1295-143l1488-134|</string>
      </dict>
    </dict>
  </lib>
</glyph>
