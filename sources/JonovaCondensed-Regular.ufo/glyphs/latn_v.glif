<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:v" format="2">
  <advance width="768"/>
  <unicode hex="0076"/>
  <anchor x="400" y="1100" name="AccentAbove"/>
  <anchor x="650" y="1100" name="AccentAboveRight"/>
  <anchor x="400" y="0" name="AccentBelow"/>
  <anchor x="300" y="486" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="174" y="1004" type="line" name="sh01"/>
      <point x="404" y="230" type="line" name="av01"/>
      <point x="412" y="230" type="line"/>
      <point x="642" y="1004" type="line" name="sh02"/>
      <point x="725" y="974" type="line" name="ah02"/>
      <point x="430" y="0" type="line" name="dh02"/>
      <point x="338" y="0" type="line" name="dh01"/>
      <point x="44" y="974" type="line" name="ah01"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 1004 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh01" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="alignv" point="av01" align="left"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="dh02" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
5 5 6 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
0 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
3 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
PUSHW[ ]	/* 1 value pushed */
1
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  3
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  3 15
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  5
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  5 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 3 values pushed */
150 1 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
18 1 34 1 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
98 1 114 1 130 1 3
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w768l174+1004l404+230l412+230l642+1004l725+974l430+0l338+0l44+974|</string>
      </dict>
    </dict>
  </lib>
</glyph>
