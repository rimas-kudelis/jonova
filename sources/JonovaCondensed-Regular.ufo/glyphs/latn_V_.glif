<?xml version="1.0" encoding="UTF-8"?>
<glyph name="latn:V" format="2">
  <advance width="936"/>
  <unicode hex="0056"/>
  <anchor x="500" y="1600" name="AccentAbove"/>
  <anchor x="750" y="1600" name="AccentAboveRight"/>
  <anchor x="350" y="0" name="AccentBelow"/>
  <anchor x="350" y="712" name="AccentOverlay"/>
  <outline>
    <contour>
      <point x="493" y="283" type="line" name="hr00"/>
      <point x="500" y="283" type="line"/>
      <point x="818" y="1464" type="line" name="sh01"/>
      <point x="908" y="1434" type="line" name="ah02"/>
      <point x="515" y="0" type="line" name="ab01"/>
      <point x="423" y="0" type="line"/>
      <point x="32" y="1434" type="line" name="ah01"/>
      <point x="182" y="1464" type="line" name="sh02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem 21 -21</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="alignh" point="ah02" align="round"/&gt;
    &lt;ttc code="singleh" point1="ah02" point2="sh01" stem="X: 122"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh02" stem="X: 122"/&gt;
    &lt;ttc code="alignt" point="sh01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="sh02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
8
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
2 5
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
7 5
MIRP[10100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
RDTG[ ]	/* RoundDownToGrid */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 9
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 3 values pushed */
131 0 1
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w936l493+283l500+283l818+1464l908+1434l515+0l423+0l32+1434l182+1464|</string>
      </dict>
    </dict>
  </lib>
</glyph>
