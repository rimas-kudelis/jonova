<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>com.fontlab.v2.tth</key>
  <dict>
    <key>codeppm</key>
    <integer>0</integer>
    <key>stems</key>
    <dict>
      <key>T1 H: 112</key>
      <dict>
        <key>horizontal</key>
        <true/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>101</key>
          <integer>6</integer>
          <key>28</key>
          <integer>2</integer>
          <key>46</key>
          <integer>3</integer>
          <key>64</key>
          <integer>4</integer>
          <key>83</key>
          <integer>5</integer>
        </dict>
        <key>width</key>
        <integer>112</integer>
      </dict>
      <key>T1 H: 142</key>
      <dict>
        <key>horizontal</key>
        <true/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>22</key>
          <integer>2</integer>
          <key>37</key>
          <integer>3</integer>
          <key>51</key>
          <integer>4</integer>
          <key>65</key>
          <integer>5</integer>
          <key>80</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>142</integer>
      </dict>
      <key>T1 H: 182</key>
      <dict>
        <key>horizontal</key>
        <true/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>19</key>
          <integer>2</integer>
          <key>29</key>
          <integer>3</integer>
          <key>40</key>
          <integer>4</integer>
          <key>51</key>
          <integer>5</integer>
          <key>62</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>182</integer>
      </dict>
      <key>T1 H: 212</key>
      <dict>
        <key>horizontal</key>
        <true/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>15</key>
          <integer>2</integer>
          <key>25</key>
          <integer>3</integer>
          <key>34</key>
          <integer>4</integer>
          <key>44</key>
          <integer>5</integer>
          <key>54</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>212</integer>
      </dict>
      <key>T1 H: 282</key>
      <dict>
        <key>horizontal</key>
        <true/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>11</key>
          <integer>2</integer>
          <key>19</key>
          <integer>3</integer>
          <key>26</key>
          <integer>4</integer>
          <key>33</key>
          <integer>5</integer>
          <key>40</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>282</integer>
      </dict>
      <key>T1 V: 142</key>
      <dict>
        <key>horizontal</key>
        <false/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>22</key>
          <integer>2</integer>
          <key>37</key>
          <integer>3</integer>
          <key>51</key>
          <integer>4</integer>
          <key>65</key>
          <integer>5</integer>
          <key>80</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>142</integer>
      </dict>
      <key>T1 V: 182</key>
      <dict>
        <key>horizontal</key>
        <false/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>19</key>
          <integer>2</integer>
          <key>29</key>
          <integer>3</integer>
          <key>40</key>
          <integer>4</integer>
          <key>51</key>
          <integer>5</integer>
          <key>62</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>182</integer>
      </dict>
      <key>T1 V: 212</key>
      <dict>
        <key>horizontal</key>
        <false/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>15</key>
          <integer>2</integer>
          <key>25</key>
          <integer>3</integer>
          <key>34</key>
          <integer>4</integer>
          <key>44</key>
          <integer>5</integer>
          <key>54</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>212</integer>
      </dict>
      <key>T1 V: 282</key>
      <dict>
        <key>horizontal</key>
        <false/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>11</key>
          <integer>2</integer>
          <key>19</key>
          <integer>3</integer>
          <key>26</key>
          <integer>4</integer>
          <key>33</key>
          <integer>5</integer>
          <key>40</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>282</integer>
      </dict>
      <key>T1 V: 302</key>
      <dict>
        <key>horizontal</key>
        <false/>
        <key>round</key>
        <dict>
          <key>0</key>
          <integer>1</integer>
          <key>11</key>
          <integer>2</integer>
          <key>19</key>
          <integer>3</integer>
          <key>24</key>
          <integer>4</integer>
          <key>31</key>
          <integer>5</integer>
          <key>38</key>
          <integer>6</integer>
        </dict>
        <key>width</key>
        <integer>302</integer>
      </dict>
    </dict>
    <key>stemsnaplimit</key>
    <integer>72</integer>
    <key>zones</key>
    <dict>
      <key>b: 0</key>
      <dict>
        <key>position</key>
        <integer>0</integer>
        <key>top</key>
        <false/>
        <key>width</key>
        <integer>30</integer>
      </dict>
      <key>b: 1</key>
      <dict>
        <key>position</key>
        <integer>-490</integer>
        <key>top</key>
        <false/>
        <key>width</key>
        <integer>0</integer>
      </dict>
      <key>b: 2</key>
      <dict>
        <key>position</key>
        <integer>-460</integer>
        <key>top</key>
        <false/>
        <key>width</key>
        <integer>0</integer>
      </dict>
      <key>t: 0</key>
      <dict>
        <key>delta</key>
        <dict>
          <key>11</key>
          <integer>8</integer>
          <key>24</key>
          <integer>8</integer>
          <key>9</key>
          <integer>8</integer>
        </dict>
        <key>position</key>
        <integer>974</integer>
        <key>top</key>
        <true/>
        <key>width</key>
        <integer>30</integer>
      </dict>
      <key>t: 1</key>
      <dict>
        <key>position</key>
        <integer>1434</integer>
        <key>top</key>
        <true/>
        <key>width</key>
        <integer>30</integer>
      </dict>
    </dict>
  </dict>
  <key>com.schriftgestaltung.customParameter.GSFont.disablesAutomaticAlignment</key>
  <true/>
  <key>com.schriftgestaltung.customParameter.GSFont.disablesLastChange</key>
  <true/>
  <key>com.schriftgestaltung.customParameter.GSFont.useNiceNames</key>
  <false/>
  <key>org.sil.pysilfontparams</key>
  <array>
    <updateTimestamps>False</updateTimestamps>
  </array>
  <key>public.truetype.instructions</key>
  <dict>
    <key>controlValue</key>
    <dict>
      <key>0</key>
      <integer>42</integer>
      <key>1</key>
      <integer>142</integer>
      <key>10</key>
      <integer>282</integer>
      <key>11</key>
      <integer>0</integer>
      <key>12</key>
      <integer>30</integer>
      <key>13</key>
      <integer>-490</integer>
      <key>14</key>
      <integer>0</integer>
      <key>15</key>
      <integer>-460</integer>
      <key>16</key>
      <integer>0</integer>
      <key>17</key>
      <integer>974</integer>
      <key>18</key>
      <integer>30</integer>
      <key>19</key>
      <integer>1434</integer>
      <key>2</key>
      <integer>112</integer>
      <key>20</key>
      <integer>30</integer>
      <key>3</key>
      <integer>182</integer>
      <key>4</key>
      <integer>212</integer>
      <key>5</key>
      <integer>282</integer>
      <key>6</key>
      <integer>182</integer>
      <key>7</key>
      <integer>302</integer>
      <key>8</key>
      <integer>212</integer>
      <key>9</key>
      <integer>142</integer>
    </dict>
    <key>controlValueProgram</key>
    <string>
PUSHW[ ]	/* 1 value pushed */
0
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
1 5 2
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
6 5 2
CALL[ ]	/* CallFunction */
SVTCA[1]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 8 values pushed */
6 62 51 40 29 19 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
7 38 31 24 19 11 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
8 54 44 34 25 15 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
9 80 65 51 37 22 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
10 40 33 26 19 11 0 8
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 8 values pushed */
1 80 65 51 37 22 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
2 101 83 64 46 28 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
3 62 51 40 29 19 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
4 54 44 34 25 15 0 8
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 8 values pushed */
5 40 33 26 19 11 0 8
CALL[ ]	/* CallFunction */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
11 5 7
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
DUP[ ]	/* DuplicateTopStack */
RCVT[ ]	/* ReadCVT */
RDTG[ ]	/* RoundDownToGrid */
ROUND[01]	/* Round */
RTG[ ]	/* RoundToGrid */
WCVTP[ ]	/* WriteCVTInPixels */
PUSHW[ ]	/* 3 values pushed */
255 17 1
DELTAC1[ ]	/* DeltaExceptionC1 */
PUSHW[ ]	/* 3 values pushed */
47 17 1
DELTAC1[ ]	/* DeltaExceptionC1 */
PUSHW[ ]	/* 3 values pushed */
15 17 1
DELTAC1[ ]	/* DeltaExceptionC1 */
</string>
    <key>fontProgram</key>
    <string>
PUSHW[ ]	/* 1 value pushed */
0
FDEF[ ]	/* FunctionDefinition */
  MPPEM[ ]	/* MeasurePixelPerEm */
  PUSHW[ ]	/* 1 value pushed */
  9
  LT[ ]	/* LessThan */
  IF[ ]	/* If */
    PUSHB[ ]	/* 2 values pushed */
    1 1
    INSTCTRL[ ]	/* SetInstrExecControl */
  EIF[ ]	/* EndIf */
  PUSHW[ ]	/* 1 value pushed */
  511
  SCANCTRL[ ]	/* ScanConversionControl */
  PUSHW[ ]	/* 1 value pushed */
  72
  SCVTCI[ ]	/* SetCVTCutIn */
  PUSHW[ ]	/* 2 values pushed */
  9 3
  SDS[ ]	/* SetDeltaShiftInGState */
  SDB[ ]	/* SetDeltaBaseInGState */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
1
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  ROUND[01]	/* Round */
  WCVTP[ ]	/* WriteCVTInPixels */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
2
FDEF[ ]	/* FunctionDefinition */
  PUSHW[ ]	/* 1 value pushed */
  1
  LOOPCALL[ ]	/* LoopAndCallFunction */
  POP[ ]	/* PopTopStack */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
3
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  PUSHB[ ]	/* 1 value pushed */
  3
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  ROLL[ ]	/* RollTopThreeStack */
  MD[0]	/* MeasureDistance */
  ABS[ ]	/* Absolute */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[00]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[00]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    NEG[ ]	/* Negate */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  MDAP[1]	/* MoveDirectAbsPt */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  0
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    ROUND[01]	/* Round */
    DUP[ ]	/* DuplicateTopStack */
    PUSHB[ ]	/* 1 value pushed */
    0
    EQ[ ]	/* Equal */
    IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
    EIF[ ]	/* EndIf */
  ELSE[ ]	/* Else */
    ROUND[01]	/* Round */
    DUP[ ]	/* DuplicateTopStack */
    PUSHB[ ]	/* 1 value pushed */
    0
    EQ[ ]	/* Equal */
    IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      NEG[ ]	/* Negate */
    EIF[ ]	/* EndIf */
  EIF[ ]	/* EndIf */
  MSIRP[0]	/* MoveStackIndirRelPt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
4
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[10]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  PUSHB[ ]	/* 1 value pushed */
  4
  CINDEX[ ]	/* CopyXToTopStack */
  GC[0]	/* GetCoordOnPVector */
  DUP[ ]	/* DuplicateTopStack */
  ROUND[10]	/* Round */
  SUB[ ]	/* Subtract */
  ABS[ ]	/* Absolute */
  GT[ ]	/* GreaterThan */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    ROLL[ ]	/* RollTopThreeStack */
  EIF[ ]	/* EndIf */
  MDAP[1]	/* MoveDirectAbsPt */
  MIRP[11101]	/* MoveIndirectRelPt */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
5
FDEF[ ]	/* FunctionDefinition */
  MPPEM[ ]	/* MeasurePixelPerEm */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  LT[ ]	/* LessThan */
  IF[ ]	/* If */
    LTEQ[ ]	/* LessThenOrEqual */
    IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      128
      WCVTP[ ]	/* WriteCVTInPixels */
    ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      WCVTP[ ]	/* WriteCVTInPixels */
    EIF[ ]	/* EndIf */
  ELSE[ ]	/* Else */
    POP[ ]	/* PopTopStack */
    POP[ ]	/* PopTopStack */
    DUP[ ]	/* DuplicateTopStack */
    RCVT[ ]	/* ReadCVT */
    PUSHB[ ]	/* 1 value pushed */
    192
    LT[ ]	/* LessThan */
    IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      192
      WCVTP[ ]	/* WriteCVTInPixels */
    ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
    EIF[ ]	/* EndIf */
  EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
6
FDEF[ ]	/* FunctionDefinition */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  ROUND[01]	/* Round */
  WCVTP[ ]	/* WriteCVTInPixels */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
  DUP[ ]	/* DuplicateTopStack */
  DUP[ ]	/* DuplicateTopStack */
  RCVT[ ]	/* ReadCVT */
  RDTG[ ]	/* RoundDownToGrid */
  ROUND[01]	/* Round */
  RTG[ ]	/* RoundToGrid */
  WCVTP[ ]	/* WriteCVTInPixels */
  PUSHB[ ]	/* 1 value pushed */
  1
  ADD[ ]	/* Add */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
7
FDEF[ ]	/* FunctionDefinition */
  PUSHW[ ]	/* 1 value pushed */
  6
  LOOPCALL[ ]	/* LoopAndCallFunction */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
8
FDEF[ ]	/* FunctionDefinition */
  MPPEM[ ]	/* MeasurePixelPerEm */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    PUSHB[ ]	/* 1 value pushed */
    64
  ELSE[ ]	/* Else */
    PUSHB[ ]	/* 1 value pushed */
    0
  EIF[ ]	/* EndIf */
  ROLL[ ]	/* RollTopThreeStack */
  ROLL[ ]	/* RollTopThreeStack */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHB[ ]	/* 1 value pushed */
    128
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHW[ ]	/* 1 value pushed */
    192
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHW[ ]	/* 1 value pushed */
    256
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHB[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    SWAP[ ]	/* SwapTopStack */
    POP[ ]	/* PopTopStack */
    PUSHW[ ]	/* 1 value pushed */
    320
    ROLL[ ]	/* RollTopThreeStack */
    ROLL[ ]	/* RollTopThreeStack */
  ELSE[ ]	/* Else */
    ROLL[ ]	/* RollTopThreeStack */
    SWAP[ ]	/* SwapTopStack */
  EIF[ ]	/* EndIf */
  DUP[ ]	/* DuplicateTopStack */
  PUSHW[ ]	/* 1 value pushed */
  3
  MINDEX[ ]	/* MoveXToTopStack */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    PUSHB[ ]	/* 1 value pushed */
    3
    CINDEX[ ]	/* CopyXToTopStack */
    RCVT[ ]	/* ReadCVT */
    PUSHW[ ]	/* 1 value pushed */
    384
    LT[ ]	/* LessThan */
    IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      384
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
    ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
    EIF[ ]	/* EndIf */
  ELSE[ ]	/* Else */
    POP[ ]	/* PopTopStack */
  EIF[ ]	/* EndIf */
  WCVTP[ ]	/* WriteCVTInPixels */
ENDF[ ]	/* EndFunctionDefinition */
PUSHW[ ]	/* 1 value pushed */
9
FDEF[ ]	/* FunctionDefinition */
  MPPEM[ ]	/* MeasurePixelPerEm */
  GTEQ[ ]	/* GreaterThanOrEqual */
  IF[ ]	/* If */
    RCVT[ ]	/* ReadCVT */
    WCVTP[ ]	/* WriteCVTInPixels */
  ELSE[ ]	/* Else */
    POP[ ]	/* PopTopStack */
    POP[ ]	/* PopTopStack */
  EIF[ ]	/* EndIf */
ENDF[ ]	/* EndFunctionDefinition */
</string>
    <key>formatVersion</key>
    <string>1</string>
    <key>maxFunctionDefs</key>
    <integer>10</integer>
    <key>maxInstructionDefs</key>
    <integer>0</integer>
    <key>maxStackElements</key>
    <integer>512</integer>
    <key>maxStorage</key>
    <integer>0</integer>
    <key>maxTwilightPoints</key>
    <integer>0</integer>
    <key>maxZones</key>
    <integer>1</integer>
  </dict>
</dict>
</plist>
