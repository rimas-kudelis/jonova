<?xml version="1.0" encoding="UTF-8"?>
<glyph name="afii10145" format="2">
  <advance width="1080"/>
  <unicode hex="040F"/>
  <outline>
    <contour>
      <point x="99" y="0" type="line" name="sh01"/>
      <point x="99" y="1434" type="line"/>
      <point x="333" y="1464" type="line" name="at01"/>
      <point x="333" y="132" type="line" name="sh02"/>
      <point x="749" y="132" type="line" name="sh04"/>
      <point x="749" y="1434" type="line"/>
      <point x="983" y="1464" type="line" name="at02"/>
      <point x="983" y="0" type="line" name="sh05"/>
      <point x="647" y="0" type="line"/>
      <point x="647" y="-315" type="line" name="sh06"/>
      <point x="435" y="-345" type="line" name="sh03"/>
      <point x="435" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem -324 -21</string>
              <string>hstem 0 132</string>
              <string>hstem 1464 -20</string>
              <string>vstem 99 234</string>
              <string>vstem 435 212</string>
              <string>vstem 749 234</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh03" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="8" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="-8" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh04" delta="8" ppm1="9" ppm2="9"/&gt;
    &lt;ttc code="mdeltah" point="sh04" delta="-8" ppm1="11" ppm2="11"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh05" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh06" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignv" point="sh03" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="sh01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh05" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh02" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="sh02" point2="sh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
3 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
15 10 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 10 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 3 values pushed */
15 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
32 4 1
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
7 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
10
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w1080l99+0l99+1434l333+1464l333+132l749+132l749+1434l983+1464l983+0l647+0l647-315l435-345l435+0|</string>
      </dict>
    </dict>
  </lib>
</glyph>
