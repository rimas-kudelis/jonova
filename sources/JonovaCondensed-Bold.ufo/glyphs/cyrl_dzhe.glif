<?xml version="1.0" encoding="UTF-8"?>
<glyph name="cyrl:dzhe" format="2">
  <advance width="840"/>
  <unicode hex="045F"/>
  <outline>
    <contour>
      <point x="77" y="0" type="line" name="sh01"/>
      <point x="77" y="974" type="line"/>
      <point x="243" y="1004" type="line" name="at01"/>
      <point x="288" y="1004" type="line"/>
      <point x="288" y="112" type="line" name="sh02"/>
      <point x="554" y="112" type="line" name="sh04"/>
      <point x="554" y="974" type="line"/>
      <point x="720" y="1004" type="line" name="at02"/>
      <point x="765" y="1004" type="line"/>
      <point x="765" y="0" type="line" name="sh05"/>
      <point x="512" y="0" type="line"/>
      <point x="512" y="-312" type="line" name="sh06"/>
      <point x="375" y="-345" type="line" name="av01"/>
      <point x="330" y="-345" type="line" name="sh03"/>
      <point x="330" y="0" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>sh01</string>
            <key>stems</key>
            <array>
              <string>hstem -324 -21</string>
              <string>hstem 0 112</string>
              <string>hstem 1004 -20</string>
              <string>vstem 77 211</string>
              <string>vstem 330 182</string>
              <string>vstem 554 211</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh03" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="8" ppm1="11" ppm2="12"/&gt;
    &lt;ttc code="mdeltah" point="sh03" delta="-8" ppm1="14" ppm2="15"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh04" round="true"/&gt;
    &lt;ttc code="mdeltah" point="sh04" delta="8" ppm1="11" ppm2="12"/&gt;
    &lt;ttc code="mdeltah" point="sh04" delta="-8" ppm1="14" ppm2="15"/&gt;
    &lt;ttc code="singleh" point1="sh04" point2="sh05" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="sh03" point2="sh06" stem="T1 V: 182"/&gt;
    &lt;ttc code="singleh" point1="sh05" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="sh01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="sh05" zone="b: 0"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh02" stem="T1 H: 112"/&gt;
    &lt;ttc code="singlev" point1="sh02" point2="sh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
15
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
4 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
47 13 63 13 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
80 13 96 13 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
47 5 63 5 2
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
80 5 96 5 2
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
9 8
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
11 6
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
12
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  9
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  9 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
4 2
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>w840l77+0l77+974l243+1004l288+1004l288+112l554+112l554+974l720+1004l765+1004l765+0l512+0l512-312l375-345l330-345l330+0|</string>
      </dict>
    </dict>
  </lib>
</glyph>
