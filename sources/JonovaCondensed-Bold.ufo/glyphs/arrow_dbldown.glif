<?xml version="1.0" encoding="UTF-8"?>
<glyph name="arrow:dbldown" format="2">
  <advance width="1536"/>
  <unicode hex="21D3"/>
  <outline>
    <contour>
      <point x="645" y="1464" type="line" name="at01"/>
      <point x="645" y="626" type="line" name="sh02"/>
      <point x="486" y="626" type="line" name="dv01"/>
      <point x="768" y="249" type="line" name="ih01"/>
      <point x="1050" y="626" type="line" name="sv01"/>
      <point x="891" y="626" type="line" name="ah01"/>
      <point x="891" y="1464" type="line" name="at02"/>
      <point x="1028" y="1464" type="line"/>
      <point x="1028" y="808" type="line" name="sh03"/>
      <point x="1322" y="808" type="line"/>
      <point x="1335" y="808"/>
      <point x="1353" y="784"/>
      <point x="1353" y="767" type="qcurve"/>
      <point x="1353" y="749"/>
      <point x="1344" y="737" type="qcurve"/>
      <point x="768" y="-30" type="line" name="ih02"/>
      <point x="191" y="740" type="line"/>
      <point x="188" y="743"/>
      <point x="183" y="758"/>
      <point x="183" y="767" type="qcurve"/>
      <point x="183" y="784"/>
      <point x="202" y="808"/>
      <point x="215" y="808" type="qcurve"/>
      <point x="509" y="808" type="line" name="sh01"/>
      <point x="509" y="1464" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at01</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 626 182</string>
              <string>hstem 1464 -20</string>
              <string>vstem 509 136</string>
              <string>vstem 891 137</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignh" point="lsb" align="round"/&gt;
    &lt;ttc code="alignh" point="ah01" align="round"/&gt;
    &lt;ttc code="singleh" point1="lsb" point2="sh01" align="round"/&gt;
    &lt;ttc code="singleh" point1="sh01" point2="sh02" stem="T1 V: 142"/&gt;
    &lt;ttc code="singleh" point1="ah01" point2="sh03" stem="T1 V: 142"/&gt;
    &lt;ttc code="interpolateh" point="ih01" point1="sh01" point2="sh03"/&gt;
    &lt;ttc code="interpolateh" point="ih02" point1="sh01" point2="sh03"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ih02" zone="b: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="sh01" stem="T1 H: 182"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv01"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sh03"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 1 value pushed */
25
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
1 9
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 9
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
3 23 8
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 23 8
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
23 3 2 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>b869168b60dd30e482b4fda5eeff9d1bee1498b06cd7aeed41888130ed373d5f74054f7833695cabb221588144ba5bbcfc8aa6ec3dfc649fee7678afab8fc149</string>
      </dict>
    </dict>
  </lib>
</glyph>
