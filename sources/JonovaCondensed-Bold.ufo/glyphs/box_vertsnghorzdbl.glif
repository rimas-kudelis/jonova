<?xml version="1.0" encoding="UTF-8"?>
<glyph name="box:vertsnghorzdbl" format="2">
  <advance width="1536"/>
  <unicode hex="256A"/>
  <outline>
    <contour>
      <point x="698" y="-566" type="line" name="dh01"/>
      <point x="698" y="444" type="line" name="dv01"/>
      <point x="-15" y="444" type="line"/>
      <point x="-15" y="626" type="line"/>
      <point x="698" y="626" type="line" name="sh01"/>
      <point x="698" y="808" type="line" name="sv01"/>
      <point x="-15" y="808" type="line" name="sv02"/>
      <point x="-15" y="990" type="line" name="at01"/>
      <point x="698" y="990" type="line" name="sh02"/>
      <point x="698" y="2000" type="line" name="av01"/>
      <point x="835" y="2000" type="line" name="sh03"/>
      <point x="835" y="990" type="line" name="at02"/>
      <point x="1551" y="990" type="line"/>
      <point x="1551" y="808" type="line" name="sv03"/>
      <point x="835" y="808" type="line" name="sh04"/>
      <point x="835" y="626" type="line" name="sv04"/>
      <point x="1551" y="626" type="line"/>
      <point x="1551" y="444" type="line" name="sv05"/>
      <point x="835" y="444" type="line"/>
      <point x="835" y="-566" type="line" name="dh02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh01</string>
            <key>stems</key>
            <array>
              <string>hstem -545 -21</string>
              <string>hstem 444 182</string>
              <string>hstem 808 182</string>
              <string>hstem 2000 -20</string>
              <string>vstem 698 137</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 142"/&gt;
    &lt;ttc code="singleh" point1="dh01" point2="sh01"/&gt;
    &lt;ttc code="singleh" point1="dh01" point2="sh02"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="sh03"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="sh04"/&gt;
    &lt;ttc code="alignv" point="dh01" align="round"/&gt;
    &lt;ttc code="alignv" point="av01" align="round"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="sh01" stem="T1 H: 182"/&gt;
    &lt;ttc code="singlev" point1="at02" point2="sv01" stem="T1 H: 182"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="sv02" point2="sv03"/&gt;
    &lt;ttc code="singlev" point1="sv03" point2="sh04"/&gt;
    &lt;ttc code="singlev" point1="sh01" point2="sv04"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv05"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
19 9 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  7
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  7 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  11
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  11 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
4 3 1 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 3
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>f6425393c72a74122f201d4edd28cfba676c15b248d95f253dd3b1592bbd2d6f3222760d7048ec8c4bb3c07221caafc9cf6de9d0a892da3e7637440db5b82411</string>
      </dict>
    </dict>
  </lib>
</glyph>
