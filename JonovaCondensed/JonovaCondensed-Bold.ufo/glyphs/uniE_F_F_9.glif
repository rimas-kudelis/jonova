<?xml version="1.0" encoding="UTF-8"?>
<glyph name="uniEFF9" format="2">
  <advance width="2048"/>
  <unicode hex="EFF9"/>
  <outline>
    <contour>
      <point x="1724" y="1234" type="line" name="dh09"/>
      <point x="1924" y="1234" type="line" name="dh10"/>
      <point x="1924" y="0" type="line" name="ab01"/>
      <point x="124" y="0" type="line" name="dh01"/>
      <point x="124" y="1234" type="line"/>
      <point x="324" y="1234" type="line"/>
      <point x="324" y="200" type="line" name="dh02"/>
      <point x="624" y="200" type="line" name="dh03"/>
      <point x="624" y="919" type="line" name="sv01"/>
      <point x="924" y="919" type="line" name="dh05"/>
      <point x="924" y="1434" type="line" name="at01"/>
      <point x="1124" y="1434" type="line"/>
      <point x="1124" y="919" type="line" name="dh06"/>
      <point x="1424" y="919" type="line"/>
      <point x="1424" y="200" type="line" name="dh08"/>
      <point x="1724" y="200" type="line" name="sv02"/>
    </contour>
    <contour>
      <point x="1224" y="200" type="line" name="dh07"/>
      <point x="1224" y="719" type="line" name="dv01"/>
      <point x="824" y="719" type="line"/>
      <point x="824" y="200" type="line" name="dh04"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>dh09</string>
            <key>stems</key>
            <array>
              <string>hstem 0 200</string>
              <string>hstem 719 200</string>
              <string>hstem 1434 -20</string>
              <string>vstem 124 200</string>
              <string>vstem 624 200</string>
              <string>vstem 924 200</string>
              <string>vstem 1224 200</string>
              <string>vstem 1724 200</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 212"/&gt;
    &lt;ttc code="doubleh" point1="dh03" point2="dh04" stem="T1 V: 212"/&gt;
    &lt;ttc code="doubleh" point1="dh05" point2="dh06" stem="T1 V: 212"/&gt;
    &lt;ttc code="doubleh" point1="dh07" point2="dh08" stem="T1 V: 212"/&gt;
    &lt;ttc code="doubleh" point1="dh09" point2="dh10" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="dh10" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="dh06" stem="T1 H: 212"/&gt;
    &lt;ttc code="singlev" point1="ab01" point2="dh02" stem="T1 H: 212"/&gt;
    &lt;ttc code="singlev" point1="dh06" point2="sv01"/&gt;
    &lt;ttc code="singlev" point1="dh02" point2="dh08"/&gt;
    &lt;ttc code="singlev" point1="dh08" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="sv02" point2="dh07"/&gt;
    &lt;ttc code="singlev" point1="dh07" point2="dh04"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
6 8 3 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
19 8 7 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
12 8 9 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
14 8 16 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
1 8 0 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  10
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  10 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
12 4 17 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
6 4
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>00149f783cac2b840b530aa69604b984b5c784f860eb8d857e30fccf76716db915d62cf65935dae86ed7e466aa8866941bc82eabfe06efed70d2fd2a7db49ca4</string>
      </dict>
    </dict>
  </lib>
</glyph>
