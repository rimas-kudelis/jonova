<?xml version="1.0" encoding="UTF-8"?>
<glyph name="afii10078" format="2">
  <advance width="1008"/>
  <unicode hex="043C"/>
  <guideline x="0" y="667" angle="0"/>
  <guideline x="449" y="0" angle="65"/>
  <guideline x="331" y="0" angle="65"/>
  <guideline x="679" y="0" angle="115"/>
  <guideline x="449" y="0" angle="115"/>
  <guideline x="778" y="0" angle="90"/>
  <guideline x="119" y="0" angle="80"/>
  <guideline x="9" y="0" angle="80"/>
  <guideline x="996" y="0" angle="100"/>
  <outline>
    <contour>
      <point x="266" y="974" type="line" name="hr00"/>
      <point x="460" y="1004" type="line" name="at01"/>
      <point x="568" y="510" type="line"/>
      <point x="575" y="510" type="line"/>
      <point x="814" y="1004" type="line" name="at02"/>
      <point x="997" y="974" type="line"/>
      <point x="997" y="0" type="line" name="dh02"/>
      <point x="778" y="0" type="line" name="dh01"/>
      <point x="778" y="667" type="line"/>
      <point x="770" y="667" type="line"/>
      <point x="554" y="219" type="line"/>
      <point x="402" y="219" type="line"/>
      <point x="303" y="667" type="line"/>
      <point x="296" y="667" type="line"/>
      <point x="110" y="-30" type="line" name="ab01"/>
      <point x="11" y="0" type="line" name="ab02"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>hr00</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 21 -21</string>
              <string>hstem 1004 -20</string>
              <string>vstem 778 219</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="doubleh" point1="dh01" point2="dh02" stem="T1 V: 212"/&gt;
    &lt;ttc code="singleh" point1="dh02" point2="rsb" round="true"/&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="dh02" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
PUSHW[ ]	/* 4 values pushed */
6 8 7 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  1
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  1 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  14
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  14 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  15
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  15 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>b1d1abba095b3b1e02d64707e35cd952febd07b1e89c87def84e922e5a8f827c0251a1325ed79bab5250c7df5ef2819148ad836693d06daec214b4f66d15f0e5</string>
      </dict>
    </dict>
  </lib>
</glyph>
