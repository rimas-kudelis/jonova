<?xml version="1.0" encoding="UTF-8"?>
<glyph name="numbersign" format="2">
  <advance width="840"/>
  <unicode hex="0023"/>
  <guideline x="0" y="431" angle="0"/>
  <guideline x="0" y="1136" angle="0"/>
  <guideline x="228" y="0" angle="70"/>
  <guideline x="791" y="0" angle="70"/>
  <guideline x="418" y="0" angle="70"/>
  <guideline x="533" y="0" angle="70"/>
  <guideline x="-35" y="0" angle="70"/>
  <guideline x="683" y="0" angle="70"/>
  <guideline x="116" y="0" angle="70"/>
  <outline>
    <contour>
      <point x="239" y="1004" type="line" name="at03"/>
      <point x="389" y="1004" type="line"/>
      <point x="515" y="1464" type="line" name="at01"/>
      <point x="620" y="1434" type="line"/>
      <point x="502" y="1004" type="line" name="at04"/>
      <point x="692" y="1004" type="line"/>
      <point x="818" y="1464" type="line" name="at02"/>
      <point x="925" y="1434" type="line"/>
      <point x="808" y="1004" type="line" name="at05"/>
      <point x="958" y="1004" type="line"/>
      <point x="916" y="852" type="line" name="sv01"/>
      <point x="766" y="852" type="line"/>
      <point x="692" y="583" type="line"/>
      <point x="842" y="583" type="line" name="dv02"/>
      <point x="801" y="431" type="line" name="dv01"/>
      <point x="651" y="431" type="line"/>
      <point x="525" y="-30" type="line" name="ab01"/>
      <point x="418" y="0" type="line"/>
      <point x="536" y="431" type="line" name="sv02"/>
      <point x="346" y="431" type="line"/>
      <point x="220" y="-30" type="line" name="ab02"/>
      <point x="116" y="0" type="line"/>
      <point x="233" y="431" type="line" name="sv03"/>
      <point x="83" y="431" type="line" name="iv01"/>
      <point x="125" y="583" type="line" name="sv04"/>
      <point x="275" y="583" type="line"/>
      <point x="348" y="852" type="line" name="sv05"/>
      <point x="198" y="852" type="line" name="sv06"/>
    </contour>
    <contour>
      <point x="387" y="583" type="line" name="sv07"/>
      <point x="577" y="583" type="line"/>
      <point x="650" y="852" type="line" name="sv08"/>
      <point x="461" y="852" type="line" name="sv09"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>com.adobe.type.autohint.v2</key>
      <dict>
        <key>hintSetList</key>
        <array>
          <dict>
            <key>pointTag</key>
            <string>at03</string>
            <key>stems</key>
            <array>
              <string>hstem -9 -21</string>
              <string>hstem 431 152</string>
              <string>hstem 852 152</string>
              <string>hstem 1464 -20</string>
            </array>
          </dict>
        </array>
      </dict>
      <key>com.fontlab.ttprogram</key>
      <string>  &lt;ttProgram&gt;
    &lt;ttc code="alignt" point="at01" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at02" zone="t: 1"/&gt;
    &lt;ttc code="alignt" point="at03" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at04" zone="t: 0"/&gt;
    &lt;ttc code="alignt" point="at05" zone="t: 0"/&gt;
    &lt;ttc code="alignb" point="ab01" zone="b: 0"/&gt;
    &lt;ttc code="alignb" point="ab02" zone="b: 0"/&gt;
    &lt;ttc code="doublev" point1="dv01" point2="dv02" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="at05" point2="sv01" stem="T1 H: 142"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv02"/&gt;
    &lt;ttc code="singlev" point1="dv01" point2="sv03"/&gt;
    &lt;ttc code="interpolatev" point="iv01" point1="ab01" point2="at01"/&gt;
    &lt;ttc code="singlev" point1="dv02" point2="sv04"/&gt;
    &lt;ttc code="singlev" point1="sv01" point2="sv05"/&gt;
    &lt;ttc code="singlev" point1="sv05" point2="sv06"/&gt;
    &lt;ttc code="singlev" point1="dv02" point2="sv07"/&gt;
    &lt;ttc code="singlev" point1="sv06" point2="sv08"/&gt;
    &lt;ttc code="singlev" point1="sv08" point2="sv09"/&gt;
  &lt;/ttProgram&gt;
</string>
      <key>public.truetype.instructions</key>
      <dict>
        <key>assembly</key>
        <string>
SVTCA[0]	/* SetFPVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  2
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  2 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  6
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  6 19
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  0
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  0 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  4
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  4 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  8
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  8 17
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  16
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  16 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
  PUSHW[ ]	/* 1 value pushed */
  20
  MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
  PUSHW[ ]	/* 2 values pushed */
  20 11
  MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
13 1 14 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 1
MIRP[10100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
23 16 2
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */
</string>
        <key>formatVersion</key>
        <string>1</string>
        <key>id</key>
        <string>c2e93bd0fd81c76d3b7f7785679545e2f7ca8dfd346fb66891351008afcbc70e1c42fdea410ec6607a477bc21e6e9e39bc108b6f11493e56f429f7e5a6bdf6eb</string>
      </dict>
    </dict>
  </lib>
</glyph>
